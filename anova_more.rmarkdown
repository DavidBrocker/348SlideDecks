---
title: "ANOVA Examples"
format: revealjs
---

```{r}
library(dplyr)
library(afex)
library(gt)
library(gtsummary)
library(ggplot2)
library(tidyplots)
library(broom)
library(stringr)
# Make Dataset
data <- 
  tibble(
  iv = 
    rep(c("coffee","decaf","water"),
        each =20),
  dv = c(rnorm(20,6.6,2),
         rnorm(20,3.3,1),
         rnorm(20,4,2))
  )

# Analyze
aov(dv~iv, data = data) |> 
  tidy() |> 
  mutate(
    SS = sumsq,
    MS = meansq,
    `F` = statistic,
    p = ifelse(p.value <.001,.001,p.value)
  ) |> 
  select(term,df,SS,MS,`F`,p) |> 
  mutate(
    term = ifelse(term == "iv","Between Groups","Within Groups")
  ) |> 
  gt() |> 
  fmt_auto() |> 
 cols_label(
   term = "Source of Variation"
 ) |> 
  tab_style(
    style = cell_text(v_align = "middle"),
    locations = 
      list(
        cells_column_labels(),
        cells_body()
      )
  ) |> 
    tab_style(
    style = cell_text(style = "italic"),
    locations = cells_column_labels()
  )
  
data |> 
  tbl_summary(
    by = "iv",
    statistic = all_continuous() ~ c("{mean}({sd})")) |> 
  add_p(
    test = all_continuous() ~ "oneway.test",
    test.args = all_tests("oneway.test")~ list(var.equal = TRUE)
    ) |> 
  modify_header(statistic ~ "**Test Statistic**") %>%
  # add a function to format the column
  modify_fmt_fun(statistic ~ style_sigfig)

TukeyHSD(aov(dv~iv,data = data)) |> 
  tidy() |> 
  gt()


```

```{r}

mixed <- 
  tibble(
  id = 1:40,
  method = rep(c("Notecards","Video"),each = 20),
  pre = rnorm(40,5.5,1) |> round(2),
  post = rnorm(40,7,2) |> round(2)
)  |> 
  tidyr::pivot_longer(
    cols = c("pre","post"),
    names_to = "time",
    values_to = "score"
    )


aov_car(score ~ method + Error(id/time),
        data = mixed)

aov_ez("id","score",mixed, between = "method",within = "time")

```

```{r}
library(gt)
library(dplyr)

create_anova_puzzle <- function(ss_effect, df_effect, ss_error, df_error, omit = c("F", "MS_effect", "MS_error", "SS_error")) {
  # Calculations
  ms_effect <- ss_effect / df_effect
  ms_error <- ss_error / df_error
  f_value <- ms_effect / ms_error
  
  # Put all into a data frame
  anova_table <- tibble::tibble(
    Source = c("Between", "Within"),
    SS = c(ss_effect, ss_error),
    df = c(df_effect, df_error),
    MS = c(ms_effect, ms_error),
    F = c(f_value, "")
  )
  
  # Omit selected component
  if ("F" %in% omit) anova_table$F[1] <- NA
  if ("MS_effect" %in% omit) anova_table$MS[1] <- NA
  if ("MS_error" %in% omit) anova_table$MS[2] <- NA
  if ("SS_error" %in% omit) anova_table$SS[2] <- NA
  
  # Format table nicely
  anova_table %>%
    gt() %>%
    fmt_number(columns = where(is.numeric), decimals = 2) %>%
    tab_header(title = "ANOVA Puzzle: Can You Find the Missing Value?")
}

# Missing F
create_anova_puzzle(
  ss_effect = 24.6,
  df_effect = 2,
  ss_error = 45.3,
  df_error = 27,
  omit = c("F")
 ) |> 
  gtsave("missing_f.png")

create_anova_puzzle(
  ss_effect = 50,
  df_effect = 2,
  ss_error = 60,
  df_error = 87,
  omit = c("MS_error")
 ) |> gtsave("missing_mserror.png")

create_anova_puzzle(
  ss_effect = 50,
  df_effect = 2,
  ss_error = 60,
  df_error = 102,
  omit = c("MS_error","MS_effect")
 ) |> 
  gtsave("missing_ms.png")

```

