sqrt(40.7268)
tibble(
ParticipantID = 1:6,
X = runif(6,30,50),
`x-M` = X-mean(X),
`(x-M)^2` = `x-M`^2
) |>
gt() |>
grand_summary_rows(
# Specify the single column to summarize
columns = `(x-M)^2`,
# Provide the aggregation function
fns = list(
Sum = ~sum(.),
Mean = ~sum(.)/5
)
) |>
cols_label(
`x-M` = md("$(x-\\bar{x})$"),
`(x-M)^2` = md("$(x-\\bar{x}^2)$")
) |> fmt_auto()
87.82228/5
tibble(
ParticipantID = 1:6,
X = runif(6,30,50),
`x-M` = X-mean(X),
`(x-M)^2` = `x-M`^2
) |>
gt() |>
grand_summary_rows(
# Specify the single column to summarize
columns = `(x-M)^2`,
# Provide the aggregation function
fns = list(
Sum = ~sum(.),
Mean = ~sum(.)/5
)
) |>
cols_label(
`x-M` = md("$(x-\\bar{x})$"),
`(x-M)^2` = md("$(x-\\bar{x}^2)$")
) |> fmt_auto()
244.17590/5
224.17590/5
set.seed(348)
infl <- tibble(
ParticipantID = 1:6,
X = runif(6,30,50),
`x-M` = X-mean(X),
`(x-M)^2` = `x-M`^2
) |>
gt() |>
grand_summary_rows(
# Specify the single column to summarize
columns = `(x-M)^2`,
# Provide the aggregation function
fns = list(
Sum = ~sum(.),
Mean = ~sum(.)/5
)
) |>
cols_label(
`x-M` = md("$(x-\\bar{x})$"),
`(x-M)^2` = md("$(x-\\bar{x}^2)$")
) |> fmt_auto()
infl
set.seed(348)
infl <- tibble(
ParticipantID = 1:6,
X = runif(6,30,50),
`x-M` = X-mean(X),
`(x-M)^2` = `x-M`^2
) |>
gt() |>
grand_summary_rows(
# Specify the single column to summarize
columns = `(x-M)^2`,
# Provide the aggregation function
fns = list(
Sum = ~sum(.),
Mean = ~sum(.)/5
)
) |>
cols_label(
`x-M` = md("$(x-\\bar{x})$"),
`(x-M)^2` = md("$(x-\\bar{x}^2)$")
) |> fmt_auto()
infl
sd(infl$`_data`$X)
sqrt(20.18764)
tibble(
ParticipantID = 1:10,
x = c(1,3,2,2,3,2,1,3,1,2),
`x-M` = x-mean(x),
`(x-M)^2` = `x-M`^2
) |>
# Bold Last Column
gt() |>
opt_row_striping() |>
cols_align(align = "center") |>
cols_label(
`x-M` = md("$(x-\\bar{x})$"),
`(x-M)^2` = md("$(x-\\bar{x}^2)$")
) |>
tab_options(
table.font.size = px(25), # Adjust font size
table.width = pct(80)   # Set table width as percentage
)
tibble(
ParticipantID = 1:10,
x = c(1,3,2,2,3,2,1,3,1,2),
`x-M` = x-mean(x),
`(x-M)^2` = `x-M`^2
) |>
# Bold Last Column
gt() |>
opt_row_striping() |>
cols_align(align = "center") |>
cols_label(
`x-M` = md("$(x-\\bar{x})$"),
`(x-M)^2` = md("$(x-\\bar{x}^2)$")
) |>
tab_options(
table.font.size = px(25), # Adjust font size
table.width = pct(80)   # Set table width as percentage
)
tibble(
ParticipantID = 1:10,
x = c(1,3,2,2,3,2,1,3,1,2),
xM = x-mean(x)
) |> gt() |>
opt_row_striping() |>
cols_label(xM = md("$x-\\bar{x}$")) |>
cols_align(align = "center") |>
tab_options(
table.font.size = px(25), # Adjust font size
table.width = pct(80)   # Set table width as percentage
) |>
tab_style(style = cell_text(style = "oblique"),locations = cells_column_labels())
?cell_text
tibble(
ParticipantID = 1:10,
x = c(1,3,2,2,3,2,1,3,1,2),
xM = x-mean(x)
) |> gt() |>
opt_row_striping() |>
cols_label(xM = md("$x-\\bar{x}$")) |>
cols_align(align = "center") |>
tab_options(
table.font.size = px(25), # Adjust font size
table.width = pct(80)   # Set table width as percentage
) |>
tab_style(style = cell_text(weight = "bold"),locations = cells_column_labels())
x <- c(4,2,5,6,3)
n <- length(x)
sum_x <- sum(x)
mean_x <- mean(x)
deviations <- x - mean_x
sq_dev <- deviations^2
ssd <- sum(sq_dev)
s2 <- var(x)  # sample variance by default (n-1)
s <- sd(x)
list(
n = n,
sum = sum_x,
mean = mean_x,
deviations = deviations,
squared_deviations = sq_dev,
sum_squared_deviations = ssd,
sample_variance = s2,
sample_sd = s
)
#| echo: true
x <- c(4,2,5,6,3)
n <- length(x)
sum_x <- sum(x)
mean_x <- mean(x)
deviations <- x - mean_x
sq_dev <- deviations^2
ssd <- sum(sq_dev)
s2 <- var(x)  # sample variance by default (n-1)
s <- sd(x)
list(
n = n,
sum = sum_x,
mean = mean_x,
deviations = deviations,
squared_deviations = sq_dev,
sum_squared_deviations = ssd,
sample_variance = s2,
sample_sd = s
)
library(dplyr)
library(gt)
tibble(
x = c(10,10,20,30,30),
`x-xbar` = x-mean(x),
`(x-xbar)^2` = (x-mean(x))^2
) |>
gt() |>
cols_label(
x = md("$x$")
`x-xbar` = md("$x-\\bar{x}$")
library(dplyr)
library(gt)
tibble(
x = c(10,10,20,30,30),
`x-xbar` = x-mean(x),
`(x-xbar)^2` = (x-mean(x))^2
) |>
gt() |>
cols_label(
x = md("$x$"),
`x-xbar` = md("$x-\\bar{x}$"),
`(x-xbar)^2` = md("$(x-\\\bar{x})^2$")
)
library(dplyr)
library(gt)
tibble(
x = c(10,10,20,30,30),
`x-xbar` = x-mean(x),
`(x-xbar)^2` = (x-mean(x))^2
) |>
gt() |>
cols_label(
x = md("$x$"),
`x-xbar` = md("$x-\\bar{x}$"),
`(x-xbar)^2` = md("$(x-\\bar{x})^2$")
)
library(dplyr)
library(gt)
tibble(
x = c(10,10,20,30,30),
`x-xbar` = x-mean(x),
`(x-xbar)^2` = (x-mean(x))^2
) |>
gt() |>
cols_label(
x = md("$x$"),
`x-xbar` = md("$x-\\bar{x}$"),
`(x-xbar)^2` = md("$(x-\\bar{x})^2$")
) |>
opt_row_striping() |>
tab_options(
table.font.size = px(25), # Adjust font size
table.width = pct(80)   # Set table width as percentage
) |>
tab_style(
style =
cell_text(
weight = "bold"),
locations =
cells_column_labels()
)
library(dplyr)
library(gt)
tibble(
x = c(10,10,20,30,30),
`x-xbar` = x-mean(x),
`(x-xbar)^2` = (x-mean(x))^2
) |>
gt() |>
cols_label(
x = md("$x$"),
`x-xbar` = md("$x-\\bar{x}$"),
`(x-xbar)^2` = md("$(x-\\bar{x})^2$")
) |>
opt_row_striping() |>
tab_options(
table.font.size = px(25), # Adjust font size
table.width = pct(80)   # Set table width as percentage
) |>
tab_style(
style =
cell_text(
weight = "bold"),
locations =
cells_column_labels()
) |>
fmt_auto()
tibble(
x = c(10,10,20,30,30),
`x-xbar` = x-mean(x),
`(x-xbar)^2` = (x-mean(x))^2,
z = (x-mean(x))/sd(x)
) |>
gt() |>
cols_label(
x = md("$x$"),
`x-xbar` = md("$x-\\bar{x}$"),
`(x-xbar)^2` = md("$(x-\\bar{x})^2$")
z = md("$z$")
tibble(
x = c(10,10,20,30,30),
`x-xbar` = x-mean(x),
`(x-xbar)^2` = (x-mean(x))^2,
z = (x-mean(x))/sd(x)
) |>
gt() |>
cols_label(
x = md("$x$"),
`x-xbar` = md("$x-\\bar{x}$"),
`(x-xbar)^2` = md("$(x-\\bar{x})^2$"),
z = md("$z$")
) |>
tab_options(
table.font.size = px(25), # Adjust font size
table.width = pct(80)   # Set table width as percentage
) |>
tab_style(
style =
cell_text(
weight = "bold"),
locations =
cells_column_labels()
)
tibble(
x = c(10,10,20,30,30),
`x-xbar` = x-mean(x),
`(x-xbar)^2` = (x-mean(x))^2,
z = (x-mean(x))/sd(x)
) |>
gt() |>
cols_label(
x = md("$x$"),
`x-xbar` = md("$x-\\bar{x}$"),
`(x-xbar)^2` = md("$(x-\\bar{x})^2$"),
z = md("$z$")
) |>
tab_options(
table.font.size = px(25), # Adjust font size
table.width = pct(80)   # Set table width as percentage
) |>
tab_style(
style =
cell_text(
weight = "bold"),
locations =
cells_column_labels()
) |>
fmt_auto()
#| fig-align: center
library(ggplot2)
library(patchwork)
p1 <-
tibble(
id = 1:5,
score = c(10,10,20,30,30)
) |>
ggplot(aes(score,id)) +
geom_point(size = 3) +
theme_minimal() +
labs(x = "\nExam Score",
y = "Student\n") +
theme(panel.grid.major = "none")
p2 <-
tibble(
id = 1:5,
score = c(10,10,20,30,30),
`x-xbar` = score - mean(score)
) |>
ggplot(aes(`x-xbar`,id)) +
geom_point(size = 3) +
theme_minimal() +
labs(x = "\nExam Score",
y = "Student\n")
p3 <-
tibble(
id =  1:5,
score = c(10,10,20,30,30),
z = (score-mean(score))/sd(score)
) |>
ggplot(aes(z,id)) +
geom_point(size = 3) +
theme_minimal() +
labs(x = "\nExam Score",
y = "Student\n") +
scale_x_continuous(limits = c(-20,20))
p1 + p2 + p3
p1 <-
tibble(
id = 1:5,
score = c(10,10,20,30,30)
) |>
ggplot(aes(score,id)) +
geom_point(size = 3) +
theme_minimal() +
labs(x = "\nExam Score",
y = "Student\n") +
theme(panel.grid.major = element_blank())
#| fig-align: center
library(ggplot2)
library(patchwork)
p1 <-
tibble(
id = 1:5,
score = c(10,10,20,30,30)
) |>
ggplot(aes(score,id)) +
geom_point(size = 3) +
theme_minimal() +
labs(x = "\nExam Score",
y = "Student\n") +
theme(panel.grid.major = element_blank())
p2 <-
tibble(
id = 1:5,
score = c(10,10,20,30,30),
`x-xbar` = score - mean(score)
) |>
ggplot(aes(`x-xbar`,id)) +
geom_point(size = 3) +
theme_minimal() +
labs(x = "\nExam Score",
y = "Student\n")
p3 <-
tibble(
id =  1:5,
score = c(10,10,20,30,30),
z = (score-mean(score))/sd(score)
) |>
ggplot(aes(z,id)) +
geom_point(size = 3) +
theme_minimal() +
labs(x = "\nExam Score",
y = "Student\n") +
scale_x_continuous(limits = c(-20,20))
p1 + p2 + p3
#| fig-align: center
library(ggplot2)
library(patchwork)
p1 <-
tibble(
id = 1:5,
score = c(10,10,20,30,30)
) |>
ggplot(aes(score,id)) +
geom_point(size = 3) +
theme_minimal() +
labs(x = "\nExam Score",
y = "Student\n") +
theme(panel.grid.major = element_blank())
p2 <-
tibble(
id = 1:5,
score = c(10,10,20,30,30),
`x-xbar` = score - mean(score)
) |>
ggplot(aes(`x-xbar`,id)) +
geom_point(size = 3) +
theme_minimal() +
labs(x = "\nExam Score",
y = "Student\n") +
theme(panel.grid.major = element_blank())
p3 <-
tibble(
id =  1:5,
score = c(10,10,20,30,30),
z = (score-mean(score))/sd(score)
) |>
ggplot(aes(z,id)) +
geom_point(size = 3) +
theme_minimal() +
labs(x = "\nExam Score",
y = "Student\n") +
scale_x_continuous(limits = c(-20,20)) +
theme(panel.grid.major = element_blank())
p1 + p2 + p3
#| fig-align: center
library(ggplot2)
library(patchwork)
p1 <-
tibble(
id = 1:5,
score = c(10,10,20,30,30)
) |>
ggplot(aes(score,id)) +
geom_point(size = 3) +
theme_minimal() +
labs(x = "\nExam Score",
y = "Student\n",
title = "Raw Scores") +
theme(panel.grid.major = element_blank())
p2 <-
tibble(
id = 1:5,
score = c(10,10,20,30,30),
`x-xbar` = score - mean(score)
) |>
ggplot(aes(`x-xbar`,id)) +
geom_point(size = 3) +
theme_minimal() +
labs(x = "\nExam Score",
y = "Student\n",
title = "Deviation Scores") +
theme(panel.grid.major = element_blank())
p3 <-
tibble(
id =  1:5,
score = c(10,10,20,30,30),
z = (score-mean(score))/sd(score)
) |>
ggplot(aes(z,id)) +
geom_point(size = 3) +
theme_minimal() +
labs(x = "\nExam Score",
y = "Student\n",
title = "Z-Scores") +
scale_x_continuous(limits = c(-20,20)) +
theme(panel.grid.major = element_blank())
p1 + p2 + p3
install.packages(c("afex", "air", "arrow", "bayestestR", "boot", "broom", "Cairo", "cards", "cardx", "checkmate", "credentials", "crosstalk", "curl", "dbplyr", "DT", "dtplyr", "echarts4r", "ellmer", "emmeans", "evaluate", "flextable", "fresh", "future", "gargle", "gdtools", "gganimate", "ggiraph", "ggplot2", "googledrive", "googlesheets4", "gtrendsR", "gtsummary", "hardhat", "httr2", "huxtable", "insight", "later", "leaflet", "magick", "magrittr", "Matrix", "mi", "OpenMx", "parallelly", "parameters", "patchwork", "pbapply", "pbkrtest", "pdftools", "PKI", "pROC", "quarto", "ragg", "RcppParallel", "renv", "roxygen2", "rprojroot", "rsconnect", "rsvg", "rvest", "semPlot", "shinydashboardPlus", "sjmisc", "skimr", "snowflakeauth", "stringr", "textshaping", "tidytext", "usethis", "V8", "visNetwork", "xfun", "XML", "xml2"))
