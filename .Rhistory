Participant = factor(1:30),
Immediate = rnorm(30, mean = 8, sd = 1.5),
After24Hours = rnorm(30, mean = 6, sd = 1.5),
After1Week = rnorm(30, mean = 4, sd = 1.5)
) |>
gt() |>
tab_header(title = "Wide Data")
data.frame(
Participant = factor(1:30),
Immediate = rnorm(30, mean = 8, sd = 1.5),
After24Hours = rnorm(30, mean = 6, sd = 1.5),
After1Week = rnorm(30, mean = 4, sd = 1.5)
) |>
gt() |>
tab_header(title = "Wide Data",
subtilte = "Each row represents an indivdual participant")
data.frame(
Participant = factor(1:30),
Immediate = rnorm(30, mean = 8, sd = 1.5),
After24Hours = rnorm(30, mean = 6, sd = 1.5),
After1Week = rnorm(30, mean = 4, sd = 1.5)
) |>
gt() |>
tab_header(title = "Wide Data",
subtitle = "Each row represents an indivdual participant")
data.frame(
Participant = factor(1:30),
Immediate = rnorm(30, mean = 8, sd = 1.5),
After24Hours = rnorm(30, mean = 6, sd = 1.5),
After1Week = rnorm(30, mean = 4, sd = 1.5)
) |>
tidyr::pivot_longer(cols = !Participant,
names_to = "Time",
values_to = "Stress")
gt() |>
tab_header(title = "Wide Data",
subtitle = "Each row represents an indivdual participant's score on each level of the treatment")
data.frame(
Participant = factor(1:30),
Immediate = rnorm(30, mean = 8, sd = 1.5),
After24Hours = rnorm(30, mean = 6, sd = 1.5),
After1Week = rnorm(30, mean = 4, sd = 1.5)
) |>
tidyr::pivot_longer(cols = !Participant,
names_to = "Time",
values_to = "Stress") |>
gt() |>
tab_header(title = "Wide Data",
subtitle = "Each row represents an indivdual participant's score on each level of the treatment")
data.frame(
Participant = factor(1:5),
Immediate = rnorm(5, mean = 8, sd = 1.5),
After24Hours = rnorm(5, mean = 6, sd = 1.5),
After1Week = rnorm(5, mean = 4, sd = 1.5)
) |>
tidyr::pivot_longer(cols = !Participant,
names_to = "Time",
values_to = "Stress") |>
gt() |>
tab_header(title = "Wide Data",
subtitle = "Each row represents an indivdual participant's score on each level of the treatment")
data.frame(
Participant = factor(1:5),
Immediate = rnorm(5, mean = 8, sd = 1.5),
After24Hours = rnorm(5, mean = 6, sd = 1.5),
After1Week = rnorm(5, mean = 4, sd = 1.5)
) |>
gt() |>
tab_header(title = "Wide Data",
subtitle = "Each row represents an indivdual participant")
data.frame(
Participant = factor(1:5),
Immediate = rnorm(5, mean = 8, sd = 1.5),
After24Hours = rnorm(5, mean = 6, sd = 1.5),
After1Week = rnorm(5, mean = 4, sd = 1.5)
) |>
tidyr::pivot_longer(cols = !Participant,
names_to = "Time",
values_to = "Stress") |>
gt() |>
fmt_auto() |>
tab_header(title = "Wide Data",
subtitle = "Each row represents an indivdual participant's score on each level of the treatment")
data.frame(
Participant = factor(1:5),
Immediate = rnorm(5, mean = 8, sd = 1.5),
Day = rnorm(5, mean = 6, sd = 1.5),
Week = rnorm(5, mean = 4, sd = 1.5)
) |>
tidyr::pivot_longer(cols = !Participant,
names_to = "Time",
values_to = "Stress") |>
gt() |>
fmt_auto() |>
tab_header(title = "Wide Data",
subtitle = "Each row represents an indivdual participant's score on each level of the treatment")
data.frame(
Participant = factor(1:5),
Immediate = rnorm(5, mean = 8, sd = 1.5),
Day = rnorm(5, mean = 6, sd = 1.5),
Week = rnorm(5, mean = 4, sd = 1.5)
) |>
tidyr::pivot_longer(cols = !Participant,
names_to = "Time",
values_to = "Stress") |>
gt() |>
fmt_auto() |>
tab_header(title = "Long Data",
subtitle = "Each row represents an indivdual participant's score on each level of the treatment")
mtcars$mpg
mtcars$mpg
t.test(x = mtcars$mpg, mu = 33)
ptt <-
tibble(
t1 = rnorm(25,5,2),
t2 = rnorm(25,7,2)
)
t.test(t1,t2,paired = TRUE, data = ptt)
ptt <-
tibble(
t1 = rnorm(25,5,2),
t2 = rnorm(25,7,2)
)
t.test(t1,t2,paired = TRUE, data = ptt)
ptt <-
tibble(
t1 = rnorm(25,5,2),
t2 = rnorm(25,7,2)
)
ptt
t.test(t1,t2,paired = TRUE, data = ptt)
t.test(t1,t2, data = ptt)
t.test(t1~t2,paired = TRUE, data = ptt)
t.test(ptt$t1,ptt$t2,paired = TRUE)
ptt
ptt |>
tidyr::pivot_wider(names_from = c("t1","t2"),
values_from = c("t1","t2"))
ptt |>
tidyr::pivot_longer(names_to = "time",
values_to = "score")
ptt |>
tidyr::pivot_longer(cols = everything(),
names_to = "time",
values_to = "score")
ptt_long <-
ptt |>
tidyr::pivot_longer(cols = everything(),
names_to = "time",
values_to = "score")
# Comma Method
t.test(ptt$t1,ptt$t2,paired = TRUE)
t.test(score ~ time, data = ptt_long)
t.test
?t.test
t.test(Pair(score.1 ~ time.2, ~ 1data = ptt_long)
t.test(Pair(t1.1,t2.2)  ~ 1, data = ptt_long)
t.test(Pair(t1.1,t2.2)  ~ 1, data = ptt)
ptt <-
tibble(
t1 = rnorm(25,5,2),
t2 = rnorm(25,7,2)
)
# Comma Method
t.test(ptt$t1,ptt$t2,paired = TRUE)
t.test(Pair(t1.1,t2.2)  ~ 1, data = ptt)
t.test(Pair(t1,t2)  ~ 1, data = ptt)
t.test(score~time, data = ptt_long)
# Comma Method
t.test(t2,t1)
t.test(t1,t2)
# Comma Method
t.test(t2,t1)
t.test(t1,t2, data = ptt)
# Comma Method
t.test(t2,t1,data = ptt)
# Comma Method
with(ptt,t.test(t2,t1))
with(ptt,t.test(t1,t2))
# Comma Method
with(ptt,t.test(t2,t1))
exp <-
tibble(
grp = rep(c("SSLD","Placebo","Control"),each = 100),
IQ = c(rnorm(100,140,5),
rnorm(100,120,10),
rnorm(100,100,15)) |> round(0)
)
aov(IQ ~ grp, data = exp)
aov(IQ ~ grp, data = exp) |>
summary()
# ANOVA's are Linear Regressions!
lm(IQ ~ grp, data = exp)
aov(IQ ~ grp, data = exp)
# ANOVA's are Linear Regressions!
lm(IQ ~ grp, data = exp) |> summary()
aov(IQ ~ grp, data = exp) |>
summary()
# ANOVA's are Linear Regressions!
lm(IQ ~ grp, data = exp) |> summary()
anova(aov(IQ ~ grp, data = exp))
aov(IQ ~ grp, data = exp) |>
summary()
# Follow-Up Tests
# Save the model, NOT the summary!
aov(IQ ~ grp, data = exp) |> TukeyHSD()
# Follow-Up Tests
# Save the model, NOT the summary!
aov(IQ ~ grp, data = exp) |>
TukeyHSD() |>
plot()
lm(IQ ~ grp, data = exp) |>
summary()
aov(IQ ~ grp, data = exp) |>
summary()
# Follow-Up Tests
# Save the model, NOT the summary!
aov(IQ ~ grp, data = exp) |>
TukeyHSD()
exp <-
tibble(
grp = rep(c("SSLD","Placebo","Control"),each = 100),
IQ = c(rnorm(100,140,5),
rnorm(100,120,5),
rnorm(100,100,5)) |> round(0)
)
aov(IQ ~ grp, data = exp) |>
summary()
# Follow-Up Tests
# Save the model, NOT the summary!
aov(IQ ~ grp, data = exp) |>
TukeyHSD()
exp <-
tibble(
grp = rep(c("SSLD","Placebo","Control"),each = 100),
IQ = c(rnorm(100,140,5),
rnorm(100,110,5),
rnorm(100,110,5)) |> round(0)
)
aov(IQ ~ grp, data = exp) |>
summary()
# ANOVA's are Linear Regressions!
lm(IQ ~ grp, data = exp) |>
summary()
# Follow-Up Tests
# Save the model, NOT the summary!
aov(IQ ~ grp, data = exp) |>
TukeyHSD()
# Follow-Up Tests
# Save the model, NOT the summary!
aov(IQ ~ grp, data = exp) |>
TukeyHSD() |> plot()
# Follow-Up Tests
# Save the model, NOT the summary!
aov(IQ ~ grp, data = exp) |>
TukeyHSD()
exp <-
tibble(
grp = rep(c("SSLD","Placebo","Control"),each = 100),
IQ = c(rnorm(100,120,5),
rnorm(100,110,5),
rnorm(100,110,5)) |> round(0)
)
aov(IQ ~ grp, data = exp) |>
summary()
# ANOVA's are Linear Regressions!
lm(IQ ~ grp, data = exp) |>
summary()
# Follow-Up Tests
# Save the model, NOT the summary!
aov(IQ ~ grp, data = exp) |>
TukeyHSD()
# Comma Method
with(ptt,t.test(t2,t1))
# Function Method
# Make the Data Wide
ptt_long <-
ptt |>
+ tidyr::pivot_longer(cols = everything(),
names_to = "time",
values_to = "score")
# Comma Method
with(ptt,t.test(t2,t1))
# Function Method
# Make the Data Wide
ptt_long <-
ptt |>
tidyr::pivot_longer(cols = everything(),
names_to = "time",
values_to = "score")
t.test(score~time, data = ptt_long)
ptt <-
tibble(
t1 = rnorm(25,5,2),
t2 = rnorm(25,7,2)
)
# Comma Method
t.test(ptt$t1,ptt$t2,paired = TRUE)
# Formula Method
t.test(Pair(t1,t2)  ~ 1, data = ptt)
memory_data_long |>
ggplot(aes(Time,Memory, color = Time)) +
stat_summary(
geom = "line",
group = 1,
fun.data = "mean_se",
color = "black"
) +
geom_jitter(alpha = .2) +
stat_summary(
geom = "errorbar",
fun.data = "mean_se",
width = .2
) +
stat_summary(
fun.data = "mean_se",
geom = "line",
group = 1
) +
theme_minimal()
memory_data_long |>
ggplot(aes(Time,Memory, color = Time)) +
stat_summary(
geom = "line",
group = 1,
fun.data = "mean_se",
color = "black"
) +
geom_jitter(alpha = .2) +
stat_summary(
geom = "errorbar",
fun.data = "mean_se",
width = .2
) +
stat_summary(
fun.data = "mean_se",
geom = "line",
group = 1,
color = "black"
) +
theme_minimal()
memory_data_long |>
ggplot(aes(Time,Memory, color = Time)) +
stat_summary(
geom = "line",
group = 1,
fun.data = "mean_se",
color = "black"
) +
stat_summary(
fun.data = "mean_se",
geom = "line",
group = 1,
color = "black"
) +
geom_jitter(alpha = .2) +
stat_summary(
geom = "errorbar",
fun.data = "mean_se",
width = .2
) +
theme_minimal()
memory_data_long |>
ggplot(aes(Time,Memory, color = Time)) +
stat_summary(
geom = "line",
group = 1,
fun.data = "mean_se",
color = "black"
) +
stat_summary(
fun.data = "mean_se",
geom = "line",
group = 1,
color = "black"
) +
geom_jitter(alpha = .2) +
stat_summary(
geom = "errorbar",
fun.data = "mean_se",
width = .2
) +
theme_minimal()
aov(DV ~ Dosage + Error(Participant), data = clinical_data_long) |>
tidy() |>
gt()
clinical_data_long |>
ggplot(aes(Dosage,DV, color = Dosage)) +
stat_summary(
geom = "line",
group = 1,
fun.data = "mean_se",
color = "black"
) +
stat_summary(
fun.data = "mean_se",
geom = "line",
group = 1,
color = "black"
) +
geom_jitter(alpha = .2) +
stat_summary(
geom = "errorbar",
fun.data = "mean_se",
width = .2
) +
theme_minimal()
therapy_data_long |>
ggplot(aes(Treatment_Group,DV,color = Treatment_Group)) +
geom_jitter(alpha = .2) +
stat_summary(
fun.data = "mean_se",
geom = "errorbar",
width = .2
) +
theme_minimal()
therapy_data_long |>
ggplot(aes(Treatment_Group,DV,color = Treatment_Group)) +
geom_jitter(alpha = .2) +
stat_summary(
fun.data = "mean_se",
geom = "errorbar",
width = .2
) +
stat_summary(
fun.data = "mean_se",
geom = "line",
width = .2
)
therapy_data_long |>
ggplot(aes(Treatment_Group,DV,color = Treatment_Group)) +
geom_jitter(alpha = .2) +
stat_summary(
fun.data = "mean_se",
geom = "errorbar",
width = .2
) +
stat_summary(
fun.data = "mean_se",
geom = "line",
group = 1,
) +
theme_minimal()
therapy_data_long |>
ggplot(aes(Treatment_Group,DV,color = Treatment_Group)) +
geom_jitter(alpha = .2) +
stat_summary(
fun.data = "mean_se",
geom = "errorbar",
width = .2
) +
stat_summary(
fun.data = "mean_se",
geom = "line",
group = 1,
color = "black"
) +
theme_minimal()
aov_ez(
"Participant",
"DV",
therapy_data_long,
within = "Treatment_Group",
anova_table = list(correction = "none")
) |> tidy()
aov_ez(
"Participant",
"DV",
therapy_data_long,
within = "Treatment_Group",
anova_table = list(correction = "none")
) |> gt()
aov_ez(
"Participant",
"DV",
therapy_data_long,
within = "Treatment_Group",
anova_table = list(correction = "none"),
return = "anova"
) |> gt()
aov_ez(
"Participant",
"DV",
therapy_data_long,
within = "Treatment_Group",
anova_table = list(correction = "none"),
return = "nice"
) |> gt()
write.csv(memory_data_long,"ex1_w.csv")
write.csv(clinical_data_long,"ex2_w.csv")
write.csv(therapy_data_long,"ex3_w.csv")
write.csv(product_data_long,"ex4_w.csv")
write.csv(stress_data_long,"ex5_w.csv")
aov(Stress ~ Time + Error(Participant), data = stress_data_long) |> TukeyHSD()
aov(Stress ~ Time + Error(Participant), data = stress_data_long) |>
tidy() |>
gt() |>
fmt_auto()
aov(Stress ~ Time + Error(Participant), data = stress_data_long)
w.mod <- aov(Stress ~ Time + Error(Participant), data = stress_data_long)
TukeyHSD(w.mod)
class(w.mod)
TukeyHSD(w.mod$Participant)
TukeyHSD(w.mod$Within)
pairwise(w.mod)
pairwise.t.test(stress_data_long)
pairwise.t.test(stress_data_long), g = Time
pairwise.t.test(stress_data_long, g = Time)
pairwise.t.test(data = stress_data_long, g = Time)
pairwise.t.test(g = stress_data_long$Time)
pairwise.t.test(g = stress_data_long$Time,x = stress_data_long$Stress)
stress_data_long |> group_by(Time) |> count()
