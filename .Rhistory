plt
plt <-
ggplot(data, aes(x = x, y = y,
lty = rev(hypothesis))) +
geom_line(aes(color = "purple")) +
theme_linedraw() +
labs(
x = "",
y = "",
lty = ""
) +
theme(
panel.grid = element_blank(),
legend.position = "inside",
legend.position.inside = c(.2,.5)
) +
scale_color_identity()
plt
plt <-
ggplot(data, aes(x = x, y = y,
lty = rev(hypothesis))) +
geom_line(aes(color = "purple")) +
theme_linedraw() +
labs(
x = "",
y = "",
lty = ""
) +
theme(
panel.grid = element_blank(),
legend.position = "inside",
legend.position.inside = c(.2,.5),
legend.background = element_rect(color = "black")
) +
scale_color_identity()
plt
plt <-
ggplot(data, aes(x = x, y = y,
lty = rev(hypothesis))) +
geom_line(aes(color = "purple")) +
theme_linedraw() +
labs(
x = "",
y = "",
lty = "Hypotheses"
) +
theme(
panel.grid = element_blank(),
legend.position = "inside",
legend.position.inside = c(.2,.5),
legend.background = element_rect(color = "black")
) +
scale_color_identity()
plt
plt +
geom_vline(
xintercept = 2,
color = "darkblue"
) +
geom_vline(
xintercept = 0,
color = "red"
) +
theme(
axis.text.x = element_blank()
) +
geom_text(
x = -4,
y = .1,
label = "M_Control = 6"
) +
geom_text(
x = -4.3,
y = .05,
label = "M_Exp = 8"
)
scale_color_manual(values = c("steelblue","darkgreen""))
tibble(
write =c(rnorm(100,50,5),rnorm(100,65,5)),
read = c(rnorm(100,55,5),rnorm(100,70,10)),
sex = rep(c("M","F"),each = 100)
tibble(
write =c(rnorm(100,50,5),rnorm(100,65,5)),
read = c(rnorm(100,55,5),rnorm(100,70,10)),
sex = rep(c("M","F"),each = 100)
) |>
ggplot(aes(write,read,color = sex)) +
geom_point(aes(shape = sex)) +
theme_linedraw() +
labs(
x = "\nWriting Score",
y = "Reading Score\n"
) +
theme(
panel.grid = element_blank()
) +
scale_color_manual(values = c("steelblue","darkgreen"))
tibble(
write =c(rnorm(100,50,5),rnorm(100,65,5)),
read = c(rnorm(100,55,5),rnorm(100,70,10)),
sex = rep(c("M","F"),each = 100)
) |>
ggplot(aes(write,read,color = sex)) +
geom_point(aes(shape = sex)) +
theme_linedraw() +
labs(
x = "\nWriting Score",
y = "Reading Score\n"
) +
theme(
panel.grid = element_blank()
) +
scale_color_manual(values = c("steelblue","darkorange"))
tibble(grp = rep(c("Experimental","Control"),each = 30),happy = c(rnorm(30,8,1),rnorm(30,6,1)))
tibble(
grp = rep(c("Experimental","Control"),
each = 30),
happy = c(rnorm(30,8,1),rnorm(30,6,1))
) |>
head()
tibble(
grp = rep(c("Experimental","Control"),
each = 30),
happy = c(rnorm(30,8,1),rnorm(30,6,1)) |> round(0)
) |>
head()
tibble(
grp = rep(c("Experimental","Control"),
each = 30),
happy = c(rnorm(30,8,1),rnorm(30,6,1)) |> round(0)
)
tibble(
grp = rep(c("Experimental","Control"),
each = 30),
happy = c(rnorm(30,8,1),rnorm(30,6,1)) |> round(0)
) |>
write.csv("T-Test-Lab.csv",row.names = FALSE)
dat
df
ls()
dat <-
tibble(
grp = rep(c("Experimental","Control"),
each = 30),
happy = c(rnorm(30,8,1),rnorm(30,6,1)) |> round(0)
)
dat <-
tibble(
grp = rep(c("Experimental","Control"),
each = 10),
happy = c(rnorm(10,8,1),rnorm(10,6,1)) |> round(0)
)
dat
dat |> tidyr::pivot_wider(id_cols = grp)
dat |> tidyr::pivot_wider(id_cols = "grp")
dat |> tidyr::pivot_wider()
dat |> tidyr::pivot_wider(names_from = "grp")
dat |> tidyr::pivot_wider(names_from = "grp",values_from = "score")
dat |> tidyr::pivot_wider(names_from = "grp",values_from = "happy")
dat |> tidyr::pivot_wider(names_from = "grp",values_from = "happy")
dat |> tidyr::pivot_wider(names_from = "grp",values_from = "happy",values_fn = list)
dat |> tidyr::pivot_wider(names_from = "grp",values_from = "happy",values_fn = list) |> tidyr::unnest()
t.test(dat$happy ~ dat$happy)
t.test(dat$happy ~ dat$grp)
t.test(dat$happy ~ dat$grp,var.equal = FALSE)
t.test(dat$happy ~ dat$grp)
t.test(dat$happy ~ dat$grp, paired = FALSE)
t.test(dat$grp ~ dat$happy, paired = FALSE)
t.test(dat$happy ~ dat$grp, paired = FALSE)
t.test(dat$happy ~ dat$grp, var.equal = TRUE)
t.test(dat$happy ~ dat$grp, var.equal = TRUE) |>
broom::tidy() |>
huxtable::hux() |>
huxtable::theme_article()
knitr::pandoc("L14pp.rtf","markdown")
library(dplyr)
tibble(
grp = rep(c("T1","T2"), each = 30)
)
tibble(
grp = rep(c("T1","T2"), each = 30),
score = c(rnorm(30,8,2),rnorm(30,4,1))
)
tibble(
grp = rep(c("T1","T2"), each = 30),
score = c(rnorm(30,8,2),rnorm(30,4,1)) |> round(0)
)
tibble(
grp = rep(c("T1","T2"), each = 30),
score = c(rnorm(30,8,2),rnorm(30,4,1)) |> round(0)
) |> t.test()
tibble(
grp = rep(c("T1","T2"), each = 30),
score = c(rnorm(30,8,2),rnorm(30,4,1)) |> round(0)
) |> t.test(.~)
tibble(
grp = rep(c("T1","T2"), each = 30),
score = c(rnorm(30,8,2),rnorm(30,4,1)) |> round(0)
)
tibble(
grp = rep(c("T1","T2"), each = 30),
score = c(rnorm(30,8,2),rnorm(30,4,1)) |> round(0)
) |> t.test(x ~ score)
tibble(
grp = rep(c("T1","T2"), each = 30),
score = c(rnorm(30,8,2),rnorm(30,4,1)) |> round(0)
) |> t.test(score ~ x)
tibble(
grp = rep(c("T1","T2"), each = 30),
score = c(rnorm(30,8,2),rnorm(30,4,1)) |> round(0)
) |> t.test(score, x)
tibble(
grp = rep(c("T1","T2"), each = 30),
score = c(rnorm(30,8,2),rnorm(30,4,1)) |> round(0)
) |> t.test(grp ~ score)
tibble(
grp = rep(c("T1","T2"), each = 30),
score = c(rnorm(30,8,2),rnorm(30,4,1)) |> round(0)
) |> t.test(score ~ grp)
t.test(score ~ grp, data = data)
data <-
tibble(
grp = rep(c("T1","T2"), each = 30),
score = c(rnorm(30,8,2),rnorm(30,4,1)) |> round(0)
)
t.test(score ~ grp, data = data)
library(broom)
library(huxtable)
t.test(score ~ grp, data = data) |>
tidy() |>
huxtable()
t.test(score ~ grp, data = data, paired = TRUE) |>
tidy() |>
huxtable()
clean_ttest_output <- function(ttest_result) {
# Extract key values from t-test result
estimate_diff <- ttest_result$estimate
t_statistic <- round(ttest_result$statistic, 2)
p_value <- signif(ttest_result$p.value, 3)  # Use significant digits for readability
degrees_freedom <- ttest_result$parameter
conf_interval <- round(ttest_result$conf.int, 2)
# Format estimates
if (length(estimate_diff) == 2) {
estimate1 <- round(estimate_diff[1], 2)
estimate2 <- round(estimate_diff[2], 2)
estimate_diff <- round(estimate_diff[1] - estimate_diff[2], 2)
} else {
estimate1 <- NA
estimate2 <- NA
}
# Create clean summary
summary <- tibble::tibble(
`Mean (Group 1)` = estimate1,
`Mean (Group 2)` = estimate2,
`Mean Difference` = estimate_diff,
`t-statistic` = t_statistic,
`p-value` = p_value,
`Degrees of Freedom` = degrees_freedom,
`Confidence Interval` = paste0("[", conf_interval[1], ", ", conf_interval[2], "]")
)
return(summary)
}
t.test(score ~ grp, data = data, paired = TRUE) |> clean_ttest_output()
t.test(score ~ grp, data = data, paired = TRUE) |>
tidy() |> clean_ttest_output()
t.test(score ~ grp, data = data, paired = TRUE) |>
tidy() |>
huxtable() |>
clean_ttest_output()
t.test(score ~ grp, data = data, paired = TRUE) |>
tidy() |>
huxtable()
t.test(score ~ grp, data = data, paired = TRUE) |>
tidy()
t.test(score ~ grp, data = data, paired = TRUE) |>
tidy() |>
rename(
estimate = D,
statistic = t,
p.value = p
)
t.test(score ~ grp, data = data, paired = TRUE) |>
tidy() |>
rename(
D = estimate,
t = statistic,
p = p.value
)
t.test(score ~ grp, data = data, paired = TRUE) |>
tidy() |>
rename(
D = estimate,
t = statistic,
p = p.value |> round(2)
)
t.test(score ~ grp, data = data, paired = TRUE) |>
tidy() |>
rename(
D = estimate,
t = statistic,
p = p.value
)
t.test(score ~ grp, data = data, paired = TRUE) |>
tidy() |>
rename(
D = estimate,
t = statistic,
p = p.value,
df = parameter
)
t.test(score ~ grp, data = data, paired = TRUE) |>
tidy() |>
rename(
D = estimate,
t = statistic,
p = p.value,
df = parameter,
`CI[uu,ll]` = paste0("[",conf.high |> round(2),", ",conf.low,"]")
)
t.test(score ~ grp, data = data, paired = TRUE) |>
tidy() |>
rename(
D = estimate,
t = statistic,
p = p.value,
df = parameter) |>
mutate(
`CI[uu,ll]` = paste0("[",conf.high |> round(2),", ",conf.low,"]")
)
t.test(score ~ grp, data = data, paired = TRUE) |>
tidy() |>
rename(
D = estimate,
t = statistic,
p = p.value,
df = parameter) |>
mutate(
`CI[uu,ll]` = paste0("[",conf.high |> round(2),", ",conf.low,"]")
) |>
select(-conf.low:method)
t.test(score ~ grp, data = data, paired = TRUE) |>
tidy() |>
rename(
D = estimate,
t = statistic,
p = p.value,
df = parameter) |>
mutate(
`CI[uu,ll]` = paste0("[",conf.high |> round(2),", ",conf.low,"]")
) |>
select(-conf.low:-method)
t.test(score ~ grp, data = data, paired = TRUE) |>
tidy() |>
rename(
D = estimate,
t = statistic,
p = p.value,
df = parameter) |>
mutate(
`CI[uu,ll]` = paste0("[",conf.high |> round(2),", ",conf.low,"]")
) |>
select(-conf.low:-alternative)
t.test(score ~ grp, data = data, paired = TRUE) |>
tidy() |>
rename(
D = estimate,
t = statistic,
p = p.value,
df = parameter) |>
mutate(
`CI[uu,ll]` = paste0("[",conf.high |> round(2),", ",conf.low |> round(2),"]")
) |>
select(-conf.low:-alternative)
t.test(score ~ grp, data = data, paired = TRUE) |>
tidy() |>
rename(
D = estimate,
t = statistic,
p = p.value,
df = parameter) |>
mutate(
`CI[uu,ll]` = paste0("[",conf.high |> round(2),", ",conf.low |> round(2),"]")
) |>
select(-conf.low:-alternative) |>
seletc(D,t,df,p,`CI[uu,ll]`)
t.test(score ~ grp, data = data, paired = TRUE) |>
tidy() |>
rename(
D = estimate,
t = statistic,
p = p.value,
df = parameter) |>
mutate(
`CI[uu,ll]` = paste0("[",conf.high |> round(2),", ",conf.low |> round(2),"]")
) |>
select(-conf.low:-alternative) |>
select(D,t,df,p,`CI[uu,ll]`)
t.test(score ~ grp, data = data, paired = TRUE) |>
tidy() |>
rename(
D = estimate,
t = statistic,
p = p.value,
df = parameter) |>
mutate(
`CI[uu,ll]` = paste0("[",conf.high |> round(2),", ",conf.low |> round(2),"]"),
p = p |> round(2)
) |>
select(-conf.low:-alternative) |>
select(D,t,df,p,`CI[uu,ll]`)
t.test(score ~ grp, data = data, paired = TRUE) |>
tidy() |>
rename(
D = estimate,
t = statistic,
p = p.value,
df = parameter) |>
mutate(
`CI[uu,ll]` = paste0("[",conf.high |> round(2),", ",conf.low |> round(2),"]"),
p = p |> round(4)
) |>
select(-conf.low:-alternative) |>
select(D,t,df,p,`CI[uu,ll]`)
t.test(score ~ grp, data = data, paired = TRUE) |>
tidy() |>
rename(
D = estimate,
t = statistic,
p = p.value,
df = parameter) |>
mutate(
`CI[uu,ll]` = paste0("[",conf.high |> round(2),", ",conf.low |> round(2),"]"),
p = p |> round(5)
) |>
select(-conf.low:-alternative) |>
select(D,t,df,p,`CI[uu,ll]`)
t.test(score ~ grp, data = data, paired = TRUE) |>
tidy() |>
rename(
D = estimate,
t = statistic,
p = p.value,
df = parameter) |>
mutate(
`CI[uu,ll]` = paste0("[",conf.high |> round(2),", ",conf.low |> round(2),"]"),
p = p |> round(10)
) |>
select(-conf.low:-alternative) |>
select(D,t,df,p,`CI[uu,ll]`)
t.test(score ~ grp, data = data, paired = TRUE) |>
tidy() |>
rename(
D = estimate,
t = statistic,
p = p.value,
df = parameter) |>
mutate(
`CI[uu,ll]` = paste0("[",conf.high |> round(2),", ",conf.low |> round(2),"]"),
p = p |> round(10)
) |>
select(-conf.low:-alternative) |>
select(D,t,df,p,`CI[uu,ll]`)
t.test(score ~ grp, data = data, paired = TRUE) |>
tidy() |>
rename(
D = estimate,
t = statistic,
p = p.value,
df = parameter) |>
mutate(
`CI[uu,ll]` = paste0("[",conf.high |> round(2),", ",conf.low |> round(2),"]"),
p = p |> round(10)
) |>
select(-conf.low:-alternative) |>
select(D,t,df,p,`CI[uu,ll]`) |>
huxtable() |>
theme_article()
set.seed(20)
data
write.csv(data,"stats_ptt.csv")
data
library(dplyr)
library(broom)
library(huxtable)
set.seed(20)
data <-
tibble(
grp = rep(c("T1","T2"), each = 30),
score = c(rnorm(30,8,2),rnorm(30,4,1)) |> round(0)
)
t.test(score ~ grp, data = data, paired = TRUE) |>
tidy() |>
rename(
D = estimate,
t = statistic,
p = p.value,
df = parameter) |>
mutate(
`CI[uu,ll]` = paste0("[",conf.high |> round(2),", ",conf.low |> round(2),"]"),
p = p |> round(10)
) |>
select(-conf.low:-alternative) |>
select(D,t,df,p,`CI[uu,ll]`) |>
huxtable() |>
theme_article()
data |>
data |> group_by(grp) |> summarize(avg = mean(score))
data
data
data
data
write.csv(data,"stats_ptt.csv")
