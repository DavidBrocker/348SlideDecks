# Summary Table
t.test(concentration ~ group, data = choco) %>%
tidy() %>%
rename(
Estimate = estimate,
`t value` = statistic,
`p value` = p.value,
df = parameter,
`95% CI Low` = conf.low,
`95% CI High` = conf.high
) |>
gt()
# Summary Table
t.test(concentration ~ group, data = choco) %>%
tidy() %>%
rename(
Estimate = estimate,
`t value` = statistic,
`p value` = p.value,
df = parameter,
`95% CI Low` = conf.low,
`95% CI High` = conf.high
) |>
gt() |>
fmt_auto()
# Summary Table
t.test(concentration ~ group, data = choco) %>%
tidy() %>%
rename(
Estimate = estimate,
t = statistic,
p = p.value,
df = parameter,
`95% CI Low` = conf.low,
`95% CI High` = conf.high
) |>
gt() |>
fmt_auto()
set.seed(99)
music <- data.frame(
quiz_score = c(rnorm(20, 18, 1), rnorm(20, 16.5, 1.2)),
group = rep(c("music", "silence"), each = 20)
)
# t-test
t.test(quiz_score ~ group, data = music, var.equal = TRUE)
# Plot
ggplot(music, aes(x = group, y = quiz_score, fill = group)) +
geom_violin(trim = FALSE) +
geom_jitter(width = 0.1, alpha = 0.4) +
theme_minimal() +
labs(title = "Music and Study Performance",
y = "Quiz Score", x = "")
# Summary Table
music %>%
t.test(quiz_score ~ group) %>%
as_tibble() %>%
rename(
Estimate = estimate,
`t value` = statistic,
`p value` = p.value,
df = parameter,
`95% CI Low` = conf.low,
`95% CI High` = conf.high
)
# Summary Table
music %>%
t.test(quiz_score ~ group, data = music) %>%
as_tibble() %>%
rename(
Estimate = estimate,
`t value` = statistic,
`p value` = p.value,
df = parameter,
`95% CI Low` = conf.low,
`95% CI High` = conf.high
)
# Summary Table
t.test(quiz_score ~ group, data = music) %>%
tidy() |>
rename(
Estimate = estimate,
`t value` = statistic,
`p value` = p.value,
df = parameter,
`95% CI Low` = conf.low,
`95% CI High` = conf.high
)
# Summary Table
t.test(quiz_score ~ group, data = music) %>%
tidy() |>
rename(
Estimate = estimate,
`t value` = statistic,
`p value` = p.value,
df = parameter,
`95% CI Low` = conf.low,
`95% CI High` = conf.high
) |>
gt() |>
fmt_auto()
# Summary Table
sleep %>%
t.test(sleep_quality ~ group, data = sleep) %>%
as_tibble() %>%
rename(
Estimate = estimate,
`t value` = statistic,
`p value` = p.value,
df = parameter,
`95% CI Low` = conf.low,
`95% CI High` = conf.high
)
# Summary Table
sleep %>%
t.test(sleep_quality ~ group, data = sleep) %>%
tidy() %>%
rename(
Estimate = estimate,
`t value` = statistic,
`p value` = p.value,
df = parameter,
`95% CI Low` = conf.low,
`95% CI High` = conf.high
) |>
gt() |>
fmt_auto()
# Summary Table
t.test(sleep_quality ~ group, data = sleep) %>%
tidy() |>
rename(
Estimate = estimate,
`t value` = statistic,
`p value` = p.value,
df = parameter,
`95% CI Low` = conf.low,
`95% CI High` = conf.high
) |>
gt() |>
fmt_auto()
set.seed(77)
sleep <-
data.frame(
sleep_quality =
c(rnorm(40, 6.8, 1), rnorm(40, 7.4, 0.9)),
group = rep(c("phone", "no_phone"), each = 40)
)
# t-test
t.test(sleep_quality ~ group, data = sleep, var.equal = TRUE)
# Plot
ggplot(sleep, aes(x = group, y = sleep_quality, fill = group)) +
geom_col(stat = "summary", fun = "mean") +
geom_errorbar(stat = "summary", fun.data = mean_se, width = 0.2) +
theme_minimal() +
labs(title = "Phone Use and Sleep Quality",
y = "Sleep Quality (1–10)", x = "")
ggplot(sleep,
aes(x = group,
y = sleep_quality,
fill = group)) +
geom_col(
stat = "summary",
fun = "mean"
)
# Plot
ggplot(sleep,
aes(x = group,
y = sleep_quality,
fill = group)) +
stat_summary(
fun = "mean",
geom = "col"
) +
geom_errorbar(
stat = "summary",
fun.data = mean_se,
width = 0.2) +
theme_minimal() +
labs(
title = "Phone Use and Sleep Quality",
y = "Sleep Quality (1–10)",
x = "")
# Summary Table
t.test(sleep_quality ~ group, data = sleep) %>%
tidy() |>
rename(
Estimate = estimate,
`t value` = statistic,
`p value` = p.value,
df = parameter,
`95% CI Low` = conf.low,
`95% CI High` = conf.high
) |>
gt() |>
fmt_auto()
set.seed(99)
music <-
data.frame(
quiz_score = c(rnorm(20, 18, 1),
rnorm(20, 16.5, 1.2)),
group = rep(c("music", "silence"), each = 20)
)
# t-test
t.test(quiz_score ~ group, data = music, var.equal = TRUE)
# Plot
ggplot(music,
aes(x = group,
y = quiz_score,
fill = group)
) +
geom_violin(trim = FALSE) +
geom_jitter(
width = 0.1,
alpha = 0.4
) +
theme_minimal() +
labs(
title = "Music and Study Performance",
y = "Quiz Score",
x = "")
# Summary Table
t.test(quiz_score ~ group, data = music) %>%
tidy() |>
rename(
Estimate = estimate,
t  = statistic,
p = p.value,
df = parameter,
`95% CI Low` = conf.low,
`95% CI High` = conf.high
) |>
gt() |>
fmt_auto()
# Summary Table
t.test(quiz_score ~ group,
data = music,
,var.equal = TRUE) %>%
tidy() |>
select(-method) |>
rename(
Estimate = estimate,
t  = statistic,
p = p.value,
df = parameter,
`95% CI Low` = conf.low,
`95% CI High` = conf.high
) |>
gt() |>
fmt_auto()
tibble(
rep(c("Coffee","Placebo","Control"), each = 10)
)
tibble(
condition =
rep(c("Coffee","Placebo","Control"),
each = 10),
score = c(rnorm(10,7.5,1),
rnorm(10,5,1),
rnorm(10,5,2)) |>
gt()
)
tibble(
condition =
rep(c("Coffee","Placebo","Control"),
each = 10),
score = c(rnorm(10,7.5,1),
rnorm(10,5,1),
rnorm(10,5,2))
) |>
gt()
tibble(
condition =
rep(c("Coffee","Placebo","Control"),
each = 10),
score = c(rnorm(10,7.5,1),
rnorm(10,5,1),
rnorm(10,5,2))
) |>
tbl_summary(by = "condition")
tibble(
condition =
rep(c("Coffee","Placebo","Control"),
each = 10),
score = c(rnorm(10,7.5,1),
rnorm(10,5,1),
rnorm(10,5,2))
) |>
tbl_summary(
by = "condition",
statistic = list(c("{mean}({sd})"))
)
tibble(
condition =
rep(c("Coffee","Placebo","Control"),
each = 10),
score = c(rnorm(10,7.5,1),
rnorm(10,5,1),
rnorm(10,5,2))
) |>
tbl_summary(
by = "condition",
statistic = list(all_continuous() = c("{mean}({sd})"))
tibble(
condition =
rep(c("Coffee","Placebo","Control"),
each = 10),
score = c(rnorm(10,7.5,1),
rnorm(10,5,1),
rnorm(10,5,2))
) |>
tbl_summary(
by = "condition",
statistic = list(all_continuous() ~ c("{mean}({sd})"))
)
tibble(
condition =
rep(c("Coffee","Placebo","Control"),
each = 10),
score = c(rnorm(10,7.5,1),
rnorm(10,5,1),
rnorm(10,5,2))
) |>
tbl_summary(
by = "condition",
statistic = list(all_continuous() ~ c("{mean}({sd})"))
) |>
add_p()
?add_p
tibble(
condition =
rep(c("Coffee","Placebo","Control"),
each = 10),
score = c(rnorm(10,7.5,1),
rnorm(10,5,1),
rnorm(10,5,2))
) |>
tbl_summary(
by = "condition",
statistic = list(all_continuous() ~ c("{mean}({sd})"))
) |>
add_p("anova")
cof |>
ggplot(aes(condition, score)) +
geom_jitter()
cof <-
tibble(
condition =
rep(c("Coffee","Placebo","Control"),
each = 10),
score = c(rnorm(10,7.5,1),
rnorm(10,5,1),
rnorm(10,5,2))
)
cof |>
ggplot(aes(condition, score, color = condition)) +
geom_jitter()
cof |>
ggplot(aes(condition, score, color = condition)) +
geom_jitter(alpha = .25) +
stat_summary(
fun.data = "mean_se",
geom = "errorbar"
)
cof |>
ggplot(aes(condition, score, color = condition)) +
geom_jitter(alpha = .25) +
stat_summary(
fun.data = "mean_se",
geom = "errorbar",
width = .2
)
cof |>
ggplot(aes(condition, score, color = condition)) +
stat_summary(
fun = "mean",
group = 1
) +
geom_jitter(alpha = .25) +
stat_summary(
fun.data = "mean_se",
geom = "errorbar",
width = .2
)
cof |>
ggplot(aes(condition, score, color = condition)) +
stat_summary(
fun_data = "mean_se",
aes(group = condition)
) +
geom_jitter(alpha = .25) +
stat_summary(
fun.data = "mean_se",
geom = "errorbar",
width = .2
)
cof |>
ggplot(aes(condition, score, color = condition)) +
stat_summary(
fun.data = "mean_se",
aes(group = condition)
) +
geom_jitter(alpha = .25) +
stat_summary(
fun.data = "mean_se",
geom = "errorbar",
width = .2
)
cof |>
ggplot(aes(condition, score, color = condition)) +
stat_summary(
fun.data = "mean_se",
aes(group = condition),
geom = "line"
) +
geom_jitter(alpha = .25) +
stat_summary(
fun.data = "mean_se",
geom = "errorbar",
width = .2
)
cof |>
ggplot(aes(condition, score, color = condition)) +
stat_summary(
fun.data = "mean_se",
aes(group = 1),
geom = "line"
) +
geom_jitter(alpha = .25) +
stat_summary(
fun.data = "mean_se",
geom = "errorbar",
width = .2
)
cof |>
ggplot(aes(condition, score, color = condition)) +
stat_summary(
fun.data = "mean_se",
aes(group = 1),
geom = "line"
color = "black"
cof |>
ggplot(aes(condition, score, color = condition)) +
stat_summary(
fun.data = "mean_se",
aes(group = 1),
geom = "line",
color = "black"
) +
geom_jitter(alpha = .25) +
stat_summary(
fun.data = "mean_se",
geom = "errorbar",
width = .2
)
cof |>
ggplot(aes(condition, score, color = condition)) +
geom_jitter(alpha = .25) +
stat_summary(
fun.data = "mean_se",
geom = "errorbar",
width = .2
) +
stat_summary(
fun.data = "mean_se",
aes(group = 1),
geom = "line",
color = "black"
) +
```
cof |>
ggplot(aes(condition, score, color = condition)) +
geom_jitter(alpha = .25) +
stat_summary(
fun.data = "mean_se",
geom = "errorbar",
width = .2
) +
stat_summary(
fun.data = "mean_se",
aes(group = 1),
geom = "line",
color = "black"
)
cof |>
ggplot(aes(condition, score, color = condition)) +
geom_jitter(alpha = .25)  +
stat_summary(
fun.data = "mean_se",
aes(group = 1),
geom = "line",
color = "black"
) +
stat_summary(
fun.data = "mean_se",
geom = "errorbar",
width = .2
)
cof |>
ggplot(aes(condition, score, color = condition)) +
geom_jitter(alpha = .25)  +
stat_summary(
fun.data = "mean_se",
aes(group = 1),
geom = "line",
color = "black"
) +
stat_summary(
fun.data = "mean_se",
geom = "errorbar",
width = .2
) +
theme_minimal()
quarto render
