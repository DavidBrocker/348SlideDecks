plot(TukeyHSD(fac_mod))
library(dplyr)
library(ggplot2)
# Set seed for reproducibility
set.seed(123)
# Create levels for the independent variables
coffee <- c("Yes", "No")
tv_show <- c("Yes", "No")
# Create a data frame with all combinations of coffee and tv_show
factorial_design <- expand.grid(Coffee = coffee, TV_Show = tv_show)
# Simulate happiness scores for each group
# Adjust means to reflect interaction effects
n_per_group <- 30 # Number of participants per condition
data <- factorial_design[rep(1:nrow(factorial_design), each = n_per_group), ]
data$Happiness <- NA
# Define mean happiness scores for each condition
means <- c(
"Yes_Yes" = 8,  # Coffee + TV Show
"Yes_No" = 6,   # Coffee + No TV Show
"No_Yes" = 5,   # No Coffee + TV Show
"No_No" = 3     # No Coffee + No TV Show
)
# Assign happiness scores with some random noise
data$Happiness <- rnorm(
n = nrow(data),
mean = means[paste(data$Coffee, data$TV_Show, sep = "_")],
sd = 1.5 # Standard deviation for noise
)
# View the first few rows of the data
head(data)
# Summary of the dataset
summary(data)
# Model
fac_mod <-
aov(Happiness ~ Coffee * TV_Show, data  = data)
data |>
ggplot(aes(Coffee, Happiness, color = TV_Show)) +
geom_jitter(alpha = .4) +
stat_summary(
fun.data = "mean_se",
geom = "line",
color = "black",
aes(group = TV_Show,
lty = TV_Show)
) +
stat_summary(
fun.data = "mean_se",
geom = "pointrange",
aes(color = TV_Show)
) +
theme_minimal() +
theme(
panel.grid = element_blank()
)
plot(TukeyHSD(fac_mod))
data
data |> haven::write_sav("LabNOV.sav")
knitr::pandoc("L17pp.rtf","markdown")
knitr::pandoc("lecanovawithinpp.rtf","markdown")
library(gt)
library(dplyr)
library(ggplot2)
# Create a 2x2 grid structure for visualization
matrix_data <- expand.grid(
Coffee = c("Yes", "No"),
TV_Show = c("Yes", "No")
) %>%
mutate(
x = as.numeric(Coffee == "Yes"),
y = as.numeric(TV_Show == "Yes"),
fill_color = c("lightblue", "lightcoral", "lightgreen", "khaki") # Assign colors
)
# Visualize the 2x2 matrix
fac_mat <-
ggplot(matrix_data, aes(xmin = x - 0.5, xmax = x + 0.5, ymin = y - 0.5, ymax = y + 0.5)) +
geom_rect(aes(fill = fill_color), color = "black", alpha = 0.8) + # Draw rectangles
scale_fill_identity() + # Use fill_color directly
labs(
title = "2x2 Factorial Matrix",
x = "Coffee", y = "TV Show"
) +
scale_x_continuous(breaks = c(0, 1), labels = c("No", "Yes"), limits = c(-0.5, 1.5)) +
scale_y_continuous(breaks = c(0, 1), labels = c("No", "Yes"), limits = c(-0.5, 1.5)) +
theme_minimal() +
theme(
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
plot.title = element_text(size = 16, face = "bold", hjust = 0.5)
)
fac_mat +
annotate(
"text", x = 1, y = 1, label = "Coffee\nDark"
) +
annotate(
"text", x = 0, y = 1, label = "Coffee\nNo Dark"
) +
annotate(
"text", x = 0, y = 0, label = "Decaf\nJeopardy"
) +
annotate(
"text", x = 1, y = 0, label = "Decaf\nJeopardy"
)
fac_mat +
annotate(
"text", x = 1, y = 1, label = "Coffee\nJeopardy"
) +
annotate(
"text", x = 0, y = 1, label = "Coffee\nDark"
) +
annotate(
"text", x = 0, y = 0, label = "Decaf\nJeopardy"
) +
annotate(
"text", x = 1, y = 0, label = "Decaf\nJeopardy"
)
fac_mat +
annotate(
"text", x = 1, y = 1, label = "Coffee\nJeopardy"
) +
annotate(
"text", x = 0, y = 1, label = "Coffee\nDark"
) +
annotate(
"text", x = 0, y = 0, label = "Decaf\nDark"
) +
annotate(
"text", x = 1, y = 0, label = "Decaf\nJeopardy"
)
library(gt)
library(dplyr)
library(ggplot2)
# Create a 2x2 grid structure for visualization
matrix_data <- expand.grid(
Coffee = c("Yes", "No"),
TV_Show = c("Yes", "No")
) %>%
mutate(
x = as.numeric(Coffee == "Yes"),
y = as.numeric(TV_Show == "Yes"),
fill_color = c("lightblue", "lightcoral", "lightgreen", "khaki") # Assign colors
)
# Visualize the 2x2 matrix
fac_mat <-
ggplot(matrix_data, aes(xmin = x - 0.5, xmax = x + 0.5, ymin = y - 0.5, ymax = y + 0.5)) +
geom_rect(aes(fill = fill_color), color = "black", alpha = 0.8) + # Draw rectangles
scale_fill_identity() + # Use fill_color directly
labs(
title = "2x2 Factorial Matrix",
x = "Coffee", y = "TV Show"
) +
scale_x_continuous(breaks = c(0, 1), labels = c("No", "Yes"), limits = c(-0.5, 1.5)) +
scale_y_continuous(breaks = c(0, 1), labels = c("No", "Yes"), limits = c(-0.5, 1.5)) +
theme_minimal() +
theme(
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
plot.title = element_text(size = 16, face = "bold", hjust = 0.5)
)
fac_mat
tribble(
~Source, ~SS, ~df, ~MS, ~F,
"Coffee",432, "","","",
"Dark",480,"","","",
"Coffee x Dark",576,"","","",
"Error",14208,"","",""
) |>
gt() |>
cols_align(align = "center",
columns = SS:F)
tribble(
~Source, ~SS, ~df, ~MS, ~F, ~p
"Coffee",432, "1","432","9",".05",
tribble(
~Source, ~SS, ~df, ~MS, ~F, ~p,
"Coffee",432, "1","432","9",".05",
"Dark",480,"1","480","10",".02",
"Coffee x Dark",576,"1","576","12",".001",
"Error",14208,"296","48","",""
) |>
gt() |>
cols_align(align = "center",
columns = SS:p)
tribble(
~Source, ~SS, ~df, ~MS, ~F, ~p,
"Coffee",432, "1","432","9",".05",
"Dark",480,"1","480","10",".02",
"Coffee x Dark",576,"1","576","12",".001",
"Error",14208,"296","48","",""
) |>
gt() |>
cols_align(align = "center",
columns = SS:p) |>
tab_style(
style = cell_text(weight = "bold"),
locations = cells_column_labels()
)
ls()
plt
pl
tibble(
time = rep(c("T1","T2"), each = 20)
)
tibble(
time = rep(c("T1","T2","T3"), each = 20),
)
tibble(
time = rep(c("T1","T2","T3"), each = 20),
score = c(rnorm(20,5,1),
rnorm(20,8,1),
rnorm(20,6.5,1))
)
wit <-
tibble(
time = rep(c("T1","T2","T3"), each = 20),
score = c(rnorm(20,5,1),
rnorm(20,8,1),
rnorm(20,6.5,1))
)
wit <-
tibble(
id = 1:60,
time = rep(c("T1","T2","T3"), each = 20),
score = c(rnorm(20,5,1),
rnorm(20,8,1),
rnorm(20,6.5,1))
)
aov(score ~ time + id, data = wit)
aov(score ~ time + id, data = wit) |> summary()
aov(score ~ time + Error(time/id), data = wit) |> summary()
wit <-
tibble(
id = rep(1:20,each = 3),
time = rep(c("T1","T2","T3"), each = 20),
score = c(rnorm(20,5,1),
rnorm(20,8,1),
rnorm(20,6.5,1))
)
aov(score ~ time + Error(time/id), data = wit) |> summary()
wit
tribble(
~Source, ~SS, ~df, ~MS, ~`F`,
"Time",49, "","","",
"Within Group",912,"","","",
"Subjects",219,"","","",
"Error","","",""
) |>
gt() |>
cols_align(align = "center",
columns = SS:F)
tribble(
~Source, ~SS, ~df, ~MS, ~`F`,
"Time",49, "","","",
"Within Group",912,"","","",
"Subjects",219,"","","",
"Error","","","",""
) |>
gt() |>
cols_align(align = "center",
columns = SS:F)
tribble(
~Source, ~SS, ~df, ~MS, ~F,
"Time",49, "","","",
"Within Group",912,"","","",
"Subjects",219,"","","",
"Error","","","",""
) |>
gt() |>
cols_align(align = "center",
columns = SS:F)
tribble(
~Source, ~SS, ~df, ~MS, ~F,
"Time","49", "","","",
"Within Group","912","","","",
"Subjects","219","","","",
"Error","","","",""
) |>
gt() |>
cols_align(align = "center",
columns = SS:F)
library(haven)
memory |> write.sav("memory_data.sav")
memory |> write_sav("memory_data.sav")
set.seed(100)
# Memory Recall Study
memory_data <- data.frame(
Participant = factor(1:30),
Immediate = rnorm(30, mean = 8, sd = 1.5),
After24Hours = rnorm(30, mean = 6, sd = 1.5),
After1Week = rnorm(30, mean = 4, sd = 1.5)
)
memory_data
memory_data
set.seed(100)
# Clinical Trial Study
clinical_data <- data.frame(
Participant = factor(1:30),
LowDose = rnorm(30, mean = 5, sd = 1),
MediumDose = rnorm(30, mean = 6.5, sd = 1),
HighDose = rnorm(30, mean = 8, sd = 1)
)
clinical_data
clinical_data |> write_sav("clinical_data.sav")
set.seed(100)
# Behavioral Therapy Study
therapy_data <- data.frame(
Participant = factor(1:30),
Baseline = rnorm(30, mean = 10, sd = 2),
MidTreatment = rnorm(30, mean = 7, sd = 2),
PostTreatment = rnorm(30, mean = 5, sd = 2)
)
therapy_data
therapy_data |> write_sav("therapy_data.sav")
library(gt)
library(dplyr)
library(ggplot2)
# Create a 2x2 grid structure for visualization
matrix_data <- expand.grid(
Coffee = c("Yes", "No"),
TV_Show = c("Yes", "No")
) %>%
mutate(
x = as.numeric(Coffee == "Yes"),
y = as.numeric(TV_Show == "Yes"),
fill_color = c("lightblue", "lightcoral", "lightgreen", "khaki") # Assign colors
)
# Visualize the 2x2 matrix
fac_mat <-
ggplot(matrix_data, aes(xmin = x - 0.5, xmax = x + 0.5, ymin = y - 0.5, ymax = y + 0.5)) +
geom_rect(aes(fill = fill_color), color = "black", alpha = 0.8) + # Draw rectangles
scale_fill_identity() + # Use fill_color directly
labs(
title = "2x2 Factorial Matrix",
x = "Coffee", y = "TV Show"
) +
scale_x_continuous(breaks = c(0, 1), labels = c("No", "Yes"), limits = c(-0.5, 1.5)) +
scale_y_continuous(breaks = c(0, 1), labels = c("No", "Yes"), limits = c(-0.5, 1.5)) +
theme_minimal() +
theme(
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
plot.title = element_text(size = 16, face = "bold", hjust = 0.5)
)
fac_mat
library(gt)
library(dplyr)
library(ggplot2)
# Create a 2x2 grid structure for visualization
matrix_data <- expand.grid(
Coffee = c("Yes", "No"),
TV_Show = c("Yes", "No")
) %>%
mutate(
x = as.numeric(Coffee == "Yes"),
y = as.numeric(TV_Show == "Yes"),
fill_color = c("lightblue", "lightcoral", "lightgreen", "khaki") # Assign colors
)
# Visualize the 2x2 matrix
fac_mat <-
ggplot(matrix_data, aes(xmin = x - 0.5, xmax = x + 0.5, ymin = y - 0.5, ymax = y + 0.5)) +
geom_rect(aes(fill = fill_color), color = "black", alpha = 0.8) + # Draw rectangles
scale_fill_identity() + # Use fill_color directly
labs(
title = "2x2 Factorial Matrix",
x = "Coffee", y = "TV Show"
) +
scale_x_continuous(breaks = c(0, 1), labels = c("No", "Yes"), limits = c(-0.5, 1.5)) +
scale_y_continuous(breaks = c(0, 1), labels = c("No", "Yes"), limits = c(-0.5, 1.5)) +
theme_minimal() +
theme(
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
plot.title = element_text(size = 16, face = "bold", hjust = 0.5)
)
fac_mat
fac_mat +
annotate(
"text", x = 1, y = 1, label = "Coffee\nJeopardy"
) +
annotate(
"text", x = 0, y = 1, label = "Coffee\nDark"
) +
annotate(
"text", x = 0, y = 0, label = "Decaf\nDark"
) +
annotate(
"text", x = 1, y = 0, label = "Decaf\nJeopardy"
)
912+219
tribble(
~Source, ~SS, ~df, ~MS, ~F,
"Time","49", "1","49","",
"Within Group","912","","","",
"Subjects","219","","","",
"Error","","","",""
) |>
gt() |>
cols_align(align = "center",
columns = SS:F)
tribble(
~Source, ~SS, ~df, ~MS, ~F,
"Time","49", "1","49","",
"Within Group","912","198","","",
"Subjects","219","99","","",
"Error","","","",""
) |>
gt() |>
cols_align(align = "center",
columns = SS:F)
912/198
198+99
219/99
198/91
198/912
49/912
tribble(
~Source, ~SS, ~df, ~MS, ~F,
"Time","49", "1","49",".053",
"Within Group","912","198","","",
"Subjects","219","99","2.2","",
"Error","912","","",""
) |>
gt() |>
cols_align(align = "center",
columns = SS:F)
# Set seed for reproducibility
set.seed(100)
# Generate sample data for a one-way ANOVA
data_one_way <- data.frame(
Group = factor(rep(c("Group1", "Group2", "Group3"), each = 20)),
Score = c(rnorm(20, mean = 70, sd = 10),
rnorm(20, mean = 75, sd = 10),
rnorm(20, mean = 80, sd = 10))
)
# Perform one-way ANOVA
one_way_aov <- aov(Score ~ Group, data = data_one_way)
data_one_way
one_way_aov |> write_sav("one_way_aov.sav")
one_way_aov
data_one_Way |> write_sav("one_way_aov.sav")
data_one_Way |> write_sav("one_way.sav")
data_one_way |> write_sav("one_way.sav")
# Generate sample data for a 2x3 factorial ANOVA
set.seed(100)
data_factorial <- data.frame(
FactorA = factor(rep(c("A1", "A2"), each = 30)),
FactorB = factor(rep(c("B1", "B2", "B3"), times = 20)),
Score = c(rnorm(10, mean = 65, sd = 10),  # A1B1
rnorm(10, mean = 70, sd = 10),  # A1B2
rnorm(10, mean = 75, sd = 10),  # A1B3
rnorm(10, mean = 68, sd = 10),  # A2B1
rnorm(10, mean = 73, sd = 10),  # A2B2
rnorm(10, mean = 78, sd = 10))  # A2B3
)
data
data_factorial
]
factorial_aov |> write_sav("factorial.sav")
data_factorial |> write_sav("factorial.sav")
library(ggplot2)
install.packages("ggplot2movies")
library(ggplot2movies)
movies |> View()
cut_interval(movies$rating,length = 1)
cut_number(movies$budget,4)
movies |>
na.omit()
?ggplotmovies
??ggplotmovies
??ggplot2movies
?ggplot2movies
?ggplot2movies::movies
movies |> filter(!is.na(budget))
library(ggplot2)
library(ggplot2movies)
library(ggiraph)
library(dplyr)
m1 <-
movies |>
filter(!is.na(budget)) |>
ggplot(
aes(year,rating,
fill = mpaa,
data_id = rating,
tooltip = title)
) +
geom_point_interactive() +
theme_minimal()
m <- girafe(ggobj = m1)
m
library(ggplot2)
library(ggplot2movies)
library(ggiraph)
library(dplyr)
m1 <-
movies |>
filter(!is.na(budget)) |>
ggplot(
aes(year,rating,
color = rating,
data_id = rating,
tooltip = title)
) +
geom_point_interactive() +
theme_minimal()
m <- girafe(ggobj = m1)
m
movies |> filter(between(year,2000,2005))
movies |> filter(between(year,2000,2005)) |> filter(!is.na(budget))
movies |> filter(between(year,2000,2005)) |> filter(!is.na(budget)) |> filter(votes > 1000)
install.packages("hsmic")
install.packages("Hmisc")
file.choose()
