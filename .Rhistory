y = "") +
theme(
axis.text.x = element_blank()
) +
geom_vline(xintercept = 10) +
geom_text(label = "Mean", y = 10, x = 0)
ggplot(data = nm, aes(x,y)) +
geom_point() +
theme_minimal() +
labs(
x = "",
y = "") +
theme(
axis.text.x = element_blank()
) +
geom_vline(xintercept = 10) +
geom_text(label = "Mean", y = .4, x = 0)
ggplot(data = nm, aes(x,y)) +
geom_point() +
theme_minimal() +
labs(
x = "",
y = "") +
theme(
axis.text.x = element_blank()
) +
geom_vline(xintercept = 10) +
geom_text(label = "Mean", y = 0, x = 10)
ggplot(data = nm, aes(x,y)) +
geom_point() +
theme_minimal() +
labs(
x = "",
y = "") +
theme(
axis.text.x = element_blank()
) +
geom_vline(xintercept = 10) +
geom_text(label = "Mean", y = 0, x = 10) +
geom_text(label = "Median", y = 0.2, x = 10)
ggplot(data = nm, aes(x,y)) +
geom_point() +
theme_minimal() +
labs(
x = "",
y = "") +
theme(
axis.text.x = element_blank()
) +
geom_vline(xintercept = 10) +
geom_text(label = "Mean", y = 0, x = 10) +
geom_text(label = "Median", y = 0.1, x = 10) +
geom_text(label = "Mode", y = 0.3, x = 10)
ggplot(data = nm, aes(x,y)) +
geom_point() +
theme_minimal() +
labs(
x = "",
y = "") +
theme(
axis.text.x = element_blank()
) +
geom_vline(xintercept = 10) +
geom_text(label = "Mean", y = 0, x = 10) +
geom_text(label = "Median", y = 0.15, x = 10) +
geom_text(label = "Mode", y = 0.3, x = 10)
ggplot(data = nm, aes(x,y)) +
geom_point() +
theme_minimal() +
labs(
x = "",
y = "") +
theme(
axis.text.x = element_blank()
) +
geom_vline(xintercept = 10) +
geom_text(label = "Mean", y = 0, x = 10) +
geom_text(label = "Median", y = 0.15, x = 10) +
geom_label(label = "Mode", y = 0.3, x = 10)
ggplot(data = nm, aes(x,y)) +
geom_point() +
theme_minimal() +
labs(
x = "",
y = "") +
theme(
axis.text.x = element_blank()
) +
geom_vline(xintercept = 10) +
geom_label(label = "Mean", y = 0, x = 10) +
geom_label(label = "Median", y = 0.15, x = 10) +
geom_label(label = "Mode", y = 0.3, x = 10)
data.frame(
z = rnorm(500,30,sd =10)
)
ggplot(xdf, aes(z)) +
geom_histogram(
binwidth = 10
) +
theme_minimal()
ggplot(aes(z)) +
geom_histogram(
binwidth = 10
) +
theme_minimal()
data.frame(
z = rnorm(500,30,sd =10)
) |>
ggplot(aes(z)) +
geom_histogram(
binwidth = 10
) +
theme_minimal()
exam <-
data.frame(
l = c(rnorm(500,80,1),
rnorm(500,65,1))
)
ggplot(exam,aes(l)) +
geom_histogram(fill = "darkgreen") +
labs(
x = "",
y = "",
title = "When half of the class scores high and the other half doesn't"
) +
theme_minimal() +
geom_vline(xintercept = 65,
color = "red") +
geom_vline(xintercept = 80,
color = "red") +
theme(
plot.title =
element_text(
size = 20,
face = "bold")
)
exam <-
data.frame(l = c(
rnorm(500,1,0.5),
rnorm(500,5,0.5))
)
ggplot(exam, aes(l)) +
geom_histogram(fill = "maroon") +
labs(x = "",
y = "",
title = "When half the class loves something and the other class hates it!",
subtitle = "On a scale of 1-7, how much do you like Professor Brocker's jokes?") +
theme_minimal() +
theme(
plot.title =
element_text(
size = 20,
face = "bold")
)
ggplot(exam, aes(l)) +
geom_histogram(fill = "maroon") +
labs(x = "",
y = ""
) +
theme_minimal()
ggplot(exam, aes(l)) +
geom_histogram(fill = "darkblue") +
labs(x = "",
y = ""
) +
theme_minimal()
data.frame(left_skewed) |>
ggplot(aes(left_skewed)) +
geom_histogram(fill = "grey90") +
labs(
x = "",
y = ""
) +
theme_minimal()
# Generate 1000 random values from a Beta distribution
left_skewed <- rbeta(1000, shape1 = 2, shape2 = 5)
data.frame(left_skewed) |>
ggplot(aes(left_skewed)) +
geom_histogram(fill = "grey90") +
labs(
x = "",
y = ""
) +
theme_minimal()
data.frame(left_skewed) |>
ggplot(aes(left_skewed)) +
geom_histogram(fill = "grey30") +
labs(
x = "",
y = ""
) +
theme_minimal()
data.frame(l =
rnorm(500,1,0.5),
) |>
ggplot(aes(l)) +
geom_histogram(fill = "darkblue") +
labs(x = "",
y = ""
) +
theme_minimal()
data.frame(l =
rnorm(500,1,0.5),
)
data.frame(
l = rnorm(500,1,0.5)
) |>
ggplot(aes(l)) +
geom_histogram(fill = "darkblue") +
labs(x = "",
y = ""
) +
theme_minimal()
data.frame(
l = rnorm(500,1,0.5)
) |>
ggplot(aes(l)) +
geom_histogram(fill = "orange") +
labs(x = "",
y = ""
) +
theme_minimal()
data.frame(
l = rnorm(500,1,0.5)
) |>
ggplot(aes(l)) +
geom_histogram(fill = "darkorange") +
labs(x = "",
y = ""
) +
theme_minimal()
data.frame(
l = rnorm(500,12,0.5)
) |>
ggplot(aes(l)) +
geom_histogram(fill = "darkorange") +
labs(x = "",
y = ""
) +
theme_minimal()
data.frame(
l = rnorm(500,12,0)
) |>
ggplot(aes(l)) +
geom_histogram(fill = "darkorange") +
labs(x = "",
y = ""
) +
theme_minimal()
data.frame(
l = rnorm(500,12,1)
) |>
ggplot(aes(l)) +
geom_histogram(fill = "darkorange") +
labs(x = "",
y = ""
) +
theme_minimal()
data.frame(l = c(
rnorm(500,1,0.5),
rnorm(500,5,0.5))
) |>
ggplot(aes(l)) +
geom_histogram(fill = "darkblue") +
labs(x = "",
y = ""
) +
theme_minimal()
data.frame(l = c(
rnorm(500,1,0.5),
rnorm(500,5,0.5))
) |>
ggplot(aes(l)) +
geom_histogram(fill = "darkblue") +
labs(x = "",
y = ""
) +
theme_minimal()
library(ggplot2)
data.frame(l = c(
rnorm(500,1,0.5),
rnorm(500,5,0.5))
) |>
ggplot(aes(l)) +
geom_histogram(fill = "darkblue") +
labs(x = "",
y = ""
) +
theme_minimal()
# Set seed for reproducibility
set.seed(123)
# Generate 1000 random values from a Beta distribution
left_skewed <- rbeta(1000, shape1 = 2, shape2 = 5)
data.frame(left_skewed) |>
ggplot(aes(left_skewed)) +
geom_histogram(fill = "grey30") +
labs(
x = "",
y = ""
) +
theme_minimal()
library(ggplot2)
library(RedditExtractoR)
library(dplyr)
RedditExtractoR::find_subreddits("selfharm")
url <- find_thread_urls(keywords = "", subreddit = "selfharm")
url |> View()
url
url <- find_thread_urls(subreddit = "selfharm")
url |> View()
get_thread_content(url$url[1])
url$url
get_thread_content(url$url[3])
# Gets those comments
test <- get_thread_content(url$url[4])
test
# Gets those comments
test <- get_thread_content(url$url[6])
test
library(tidytext)
test |> names()
test$comments
test$comments$comment
test_comment <- test$comments$comment
tibble(
line = 1:length(test_comment),
test_comment)
tibble(
line = 1:length(test_comment),
test_comment
) |>
unnest_tokens(word,test_comment)
library(ggplot2)
tibble(
line = 1:length(test_comment),
test_comment
) |>
unnest_tokens(word,test_comment) |>
group_by(word) |>
count(sort = TRUE) |>
ggplot(aes(word,n)) +
geom_bar(stat="identity")
tibble(
line = 1:length(test_comment),
test_comment
) |>
unnest_tokens(word,test_comment) |>
group_by(word) |>
count(sort = TRUE) |>
ggplot(aes(word,n)) +
geom_bar(stat="identity") +
coord_flip() +
theme_minimal()
tibble(
line = 1:length(test_comment),
test_comment
) |>
unnest_tokens(word,test_comment) |>
group_by(word) |>
count(sort = TRUE)
tibble(
line = 1:length(test_comment),
test_comment
) |>
unnest_tokens(word,test_comment) |>
anti_join(stop_words) |>
group_by(word) |>
count(sort = TRUE)
tibble(
line = 1:length(test_comment),
test_comment
) |>
unnest_tokens(word,test_comment) |>
anti_join(stop_words) |>
group_by(word) |>
count(sort = TRUE) |>
ggplot(aes(word,n)) +
geom_bar(stat="identity") +
coord_flip() +
theme_minimal()
tibble(
line = 1:length(test_comment),
test_comment
) |>
unnest_tokens(word,test_comment) |>
anti_join(stop_words) |>
group_by(word) |>
count(sort = TRUE) |>
ungroup() |>
slice(20) |>
ggplot(aes(word,n)) +
geom_bar(stat="identity") +
coord_flip() +
theme_minimal()
tibble(
line = 1:length(test_comment),
test_comment
) |>
unnest_tokens(word,test_comment) |>
anti_join(stop_words) |>
group_by(word) |>
count(sort = TRUE) |>
ungroup() |>
slice(1:20) |>
ggplot(aes(word,n)) +
geom_bar(stat="identity") +
coord_flip() +
theme_minimal()
tibble(
line = 1:length(test_comment),
test_comment
) |>
unnest_tokens(word,test_comment) |>
anti_join(stop_words) |>
group_by(word) |>
count(sort = TRUE) |>
ungroup() |>
slice(1:40) |>
ggplot(aes(word,n)) +
geom_bar(stat="identity") +
coord_flip() +
theme_minimal()
tibble(
line = 1:length(test_comment),
test_comment
) |>
unnest_tokens(word,test_comment) |>
anti_join(stop_words) |>
group_by(word) |>
count(sort = TRUE) |>
ungroup() |>
slice(1:40) |>
ggplot(aes(word,n,fill = n)) +
geom_bar(stat="identity") +
coord_flip() +
theme_minimal()
# Gets those comments
test <- get_thread_content(url$url[8])
test_comment <- test$comments$comment
tibble(
line = 1:length(test_comment),
test_comment
) |>
unnest_tokens(word,test_comment) |>
anti_join(stop_words) |>
group_by(word) |>
count(sort = TRUE) |>
ungroup() |>
slice(1:40) |>
ggplot(aes(word,n,fill = n)) +
geom_bar(stat="identity") +
coord_flip() +
theme_minimal()
tibble(
line = 1:length(test_comment),
test_comment
) |>
unnest_tokens(word,test_comment) |>
anti_join(stop_words) |>
group_by(word) |>
count(sort = TRUE)
tibble(
line = 1:length(test_comment),
test_comment
) |>
unnest_tokens(word,test_comment)
# Gets those comments
test <- get_thread_content(url$url[10])
test_comment <- test$comments$comment
tibble(
line = 1:length(test_comment),
test_comment
) |>
unnest_tokens(word,test_comment) |>
anti_join(stop_words) |>
group_by(word) |>
count(sort = TRUE) |>
ungroup() |>
slice(1:40) |>
ggplot(aes(word,n,fill = n)) +
geom_bar(stat="identity") +
coord_flip() +
theme_minimal()
library(wordcloud2)
tibble(
line = 1:length(test_comment),
test_comment
) |>
unnest_tokens(word,test_comment) |>
anti_join(stop_words) |>
group_by(word) |>
count(sort = TRUE) |>
wordcloud2()
tibble(
line = 1:length(test_comment),
test_comment
) |>
unnest_tokens(word,test_comment) |>
anti_join(stop_words) |>
group_by(word) |>
count(sort = TRUE) |>
wordcloud2(backgroundColor = "black")
tibble(
line = 1:length(test_comment),
test_comment
) |>
unnest_tokens(word,test_comment) |>
anti_join(stop_words) |>
group_by(word) |>
count(sort = TRUE) |>
wordcloud2(backgroundColor = "black",
shape = "star")
