'F statistic' = 'statistic',
'P value' = 'p.value'),
bold_signif = .05,
note = "{stars}"
) |>
set_width(1.5)
huxreg(
"Money"=mod1,
error_pos = "right",
statistics =
c('# Observations' = 'nobs',
'R squared' = 'r.squared',
'Adjusted R squared' = 'adj.r.squared',
'F statistic' = 'statistic',
'P value' = 'p.value'),
bold_signif = .05,
note = "{stars}"
) |>
set_width(1)
install.packages("flair")
library(dplyr)
library(huxtable)
test <-
tibble(
money = rnorm(100,55,5),
x1 = rnorm(100,14,2),
x2 = rnorm(100,30,2),
x3 = rnorm(100,23,5) ,
x4 = rnorm(100,60,1)
)
mod1 <- lm(money ~ x1+x2+x3+x4, data = test) |> summary()
huxreg(
"Money"=mod1,
error_pos = "right",
statistics =
c('# Observations' = 'nobs',
'R squared' = 'r.squared',
'Adjusted R squared' = 'adj.r.squared',
'F statistic' = 'statistic',
'P value' = 'p.value'),
bold_signif = .05,
note = "{stars}"
) |>
set_width(1)
huxreg(
"Money"=mod1,
error_pos = "right",
statistics =
c('# Observations' = 'nobs',
'R squared' = 'r.squared',
'Adjusted R squared' = 'adj.r.squared',
'F statistic' = 'statistic',
'P value' = 'p.value'),
bold_signif = .05,
note = "{stars}"
) |>
set_width(1) |>
set_height(1)
?set_width
huxreg(
"Money"=mod1,
error_pos = "right",
statistics =
c('# Observations' = 'nobs',
'R squared' = 'r.squared',
'Adjusted R squared' = 'adj.r.squared',
'F statistic' = 'statistic',
'P value' = 'p.value'),
bold_signif = .05,
note = "{stars}"
) |>
set_width("200px") |>
set_height("200px")
theme_article
huxreg(
"Money"=mod1,
error_pos = "right",
statistics =
c('# Observations' = 'nobs',
'R squared' = 'r.squared',
'Adjusted R squared' = 'adj.r.squared',
'F statistic' = 'statistic',
'P value' = 'p.value'),
bold_signif = .05,
note = "{stars}"
) |>
theme_article()
huxreg(
"Money"=mod1,
error_pos = "right",
statistics =
c('# Observations' = 'nobs',
'R squared' = 'r.squared',
'Adjusted R squared' = 'adj.r.squared',
'F statistic' = 'statistic',
'P value' = 'p.value'),
bold_signif = .05,
note = "{stars}"
) |>
theme_basic() |>
to_html()
huxreg(
"Money"=mod1,
error_pos = "right",
statistics =
c('# Observations' = 'nobs',
'R squared' = 'r.squared',
'Adjusted R squared' = 'adj.r.squared',
'F statistic' = 'statistic',
'P value' = 'p.value'),
bold_signif = .05,
note = "{stars}"
) |>
theme_basic() |>
to_md()
?huxtable::set_outer_padding()
mod1 |> summary()
mod1
mod1$cov.unscaled
mod1$coefficients
mod1$aliased
mod1$terms
tab1 <-
huxreg(
"Money"=mod1,
error_pos = "right",
statistics =
c('# Observations' = 'nobs',
'R squared' = 'r.squared',
'Adjusted R squared' = 'adj.r.squared',
'F statistic' = 'statistic',
'P value' = 'p.value'),
bold_signif = .05,
note = "{stars}"
) |>
theme_striped() |>
set_all_padding(0) |>
set_width(.8)
tab1 |>
set_all_border_colors(row = 1, "red")
tab1 |>
set_all_border_colors(row = 1, value = "red")
tab1 |>
set_all_border_colors(row = 2, value = "red") |>
set_all_border_styles(row = 2, value = 2)
?set_all_border_styles()
tab1 |>
set_all_border_colors(row = 2, value = "red") |>
set_all_border_styles(row = 2, value = "double")
?set_bottom_border
tab1 |>
set_all_borders(
row = 2,
thickness = .5,
style = "solid",
color = "red")
tab1 |>
set_all_borders(
row = 2,
brdr(
thickness = .5,
style = "solid",
color = "red")
)
tab1 |>
set_all_borders(
row = 2,
brdr(
.5,
"solid",
"red")
)
set_all_borders(
tab1,
row = 2,
brdr(
.5,
"solid",
"red")
)
set_bottom_border(jams, brdr(0.4, "solid", "green"))
set_all_borders(
tab1,
row = 2,
brdr(
.5,
"solid",
"red")
)
set_all_borders(
tab1,
brdr(
.5,
"solid",
"red")
)
?brdr
set_bottom_border(jams, brdr(1, "solid", "red"))
set_all_borders(
tab1,
brdr(
.5,
"solid",
"red")
)
set_bottom_border(jams, brdr(1, "solid", "red"))
set_all_borders(
tab1,
brdr(
.5,
"solid",
"red")
)
tab1 |>
set_all_border_colors(row = 2, value = "red") |>
brdr_thickness(.6)
tab1 |>
set_all_border_colors(row = 2, value = "red") |>
brdr_thickness(value = .6)
?brdr_thickness
brdr_thickness(brdr(1, "solid", "red"))
tab1 |>
set_all_border_colors(row = 2, value = "red") |>
brdr_thickness(value = .6)
tab1 |>
set_all_border_colors(row = 2, value = "red") |>
set_all_border_styles(row = 2, value = "solid")
tab1 |>
set_all_border_colors(row = 2, value = "red") |>
set_all_border_styles(row = 2, value = "solid", thickness = .4)
tab1[2,]
tab1[2,] <- brdr(thickness = .8, style = "solid", color = "red")
tab1
tab1[1]
tab1[1,]
tab1[2,] <- brdr(thickness = .8, style = "solid", color = "red")
tab1
tab1 |>
set_all_border_colors(row = 2, value = "red") |>
set_all_border_styles(row = 2, value = "solid")
hm <- read.csv("Horror Movie Data https___notawfulandboring.blogspot.com_ - Data.csv")
hm |> names()
library(janitor)
hm |>
clean_names() |>
names()
hm |>
clean_names() |>
lm(scare_score ~)
?map, ...)
?purrr::map
hm_cln <-
hm |>
clean_names()
hm_cln |> names)
hm_cln |> names()
lm(scare_score ~ ranking + rotten_tomato_score + year + avg+movie_heart_rate_bpm) |>
summary() |>
View()
hm_cln |> lm(scare_score ~ ranking + rotten_tomato_score + year + avg+movie_heart_rate_bpm) |>
summary() |>
View()
hm_cln |> lm(scare_score ~ ranking + rotten_tomato_score + year + avg+movie_heart_rate_bpm) |>
summary()
lm(scare_score ~ ranking + rotten_tomato_score + year + avg+movie_heart_rate_bpm, data = hm_cln) |>
summary()
lm(scare_score ~ ranking + rotten_tomato_score + year + avg_movie_heart_rate_bpm, data = hm_cln) |>
summary()
summary()
lm(scare_score ~ ranking + rotten_tomato_score + year + avg_movie_heart_rate_bpm, data = hm_cln) |> summary()
lm(scare_score ~ ., data = hm_cln) |> summary()
hm_cln |> movies()
hm_cln |> names()
hm_cln |> select(!movie) |> lm(ranking ~ .)
hm_cln |> select(!movie) |> lm(ranking ~ ., data = hm_cln)
library(janitor)
hm <- read.csv("Horror Movie Data https___notawfulandboring.blogspot.com_ - Data.csv")
hm_cln <-
hm |>
clean_names() |>
select(!movie)
lm(scare_score ~ ., data = hm_cln) |>
summary()
lm(scare_score ~ ., data = hm_cln) |>
summary() |>
huxreg()
lm(scare_score ~ ., data = hm_cln) |>
summary() |>
gt::gt()
lm(scare_score ~ ., data = hm_cln) |>
summary() |>
broom::tidy() |>
gt()
lm(scare_score ~ ., data = hm_cln) |>
summary() |>
broom::tidy() |>
gt::gt()
library(janitor)
hm <- read.csv("Horror Movie Data https___notawfulandboring.blogspot.com_ - Data.csv")
hm_cln <-
hm |>
clean_names() |>
select(!movie,!avg_resting_heart_bpm)
hm <- read.csv("Horror Movie Data https___notawfulandboring.blogspot.com_ - Data.csv")
hm_cln <-
hm |>
clean_names() |>
select(!movie,!avg_resting_heart_bpm)
hm |> clean_names() |> names()
library(janitor)
hm <- read.csv("Horror Movie Data https___notawfulandboring.blogspot.com_ - Data.csv")
hm_cln <-
hm |>
clean_names() |>
select(!movie,!avg_resting_heart_rate_bpm)
lm(scare_score ~ ., data = hm_cln) |>
summary()
hm_cln <-
hm |>
clean_names() |>
select(!movie,!avg_resting_heart_rate_bpm)
lm(scare_score ~ ., data = hm_cln) |>
summary()
hm_cln <-
hm |>
clean_names() |>
select(-movie,-avg_resting_heart_rate_bpm)
lm(scare_score ~ ., data = hm_cln) |>
summary()
lm(scare_score ~ ., data = hm_cln) |>
summary() |>
huxreg(bold_signif = ".05")
lm(scare_score ~ ., data = hm_cln) |>
summary() |>
huxreg(bold_signif = .05,
note = "{stars}")
lm(scare_score ~ ., data = hm_cln) |>
summary() |>
huxreg(bold_signif = .05,
note = "{stars}",
error_pos = "same")
lm(scare_score ~ ., data = hm_cln) |>
summary() |>
huxreg(bold_signif = .05,
note = "{stars}",
error_pos = "same",
statistics = c("nobs","adj.r.squared"))
lm(scare_score ~ ., data = hm_cln) |>
summary() |>
huxreg(bold_signif = .05,
note = "{stars}",
error_pos = "same",
statistics = c("nobs","r.squared"))
library(janitor)
hm <- read.csv("Horror Movie Data https___notawfulandboring.blogspot.com_ - Data.csv")
hm_cln <-
hm |>
clean_names() |>
select(-movie,-avg_resting_heart_rate_bpm)
lm(scare_score ~ ., data = hm_cln) |>
summary() |>
huxreg(bold_signif = .05,
note = "{stars}",
error_pos = "same",
statistics = c("nobs","r.squared"))
?huxtable::to_screen
bottom_border(jams)[1, 1:2] <- 1
bold(jams)[1, 1:2] <- TRUE
jams <- map_text_color(jams,
by_regex("berry" = "red"))
print_screen(jams)
lm(scare_score ~ ., data = hm_cln) |>
summary() |>
huxreg(bold_signif = .05,
note = "{stars}",
error_pos = "same",
statistics = c("nobs","r.squared")) |>
theme_article() |>
print_screen()
lm(scare_score ~ ., data = hm_cln) |>
summary() |>
huxreg(bold_signif = .05,
note = "{stars}",
error_pos = "same",
statistics = c("nobs","r.squared"),
coefs = c("ranking" = "Ranking")) |>
theme_striped() |>
print_screen()
lm(scare_score ~ ., data = hm_cln) |>
summary() |>
huxreg(bold_signif = .05,
note = "{stars}",
error_pos = "same",
statistics = c("nobs","r.squared"),
coefs = c("Ranking" = "ranking")) |>
theme_striped() |>
print_screen()
lm(scare_score ~ ., data = hm_cln) |>
summary() |>
huxreg(bold_signif = .05,
note = "{stars}",
error_pos = "same",
statistics = c("nobs","r.squared"),
coefs = c("Ranking" = "ranking",
"Avg. Heart Rate (BPM)" = "avg_movie_hear_rate_bpm")) |>
theme_striped() |>
print_screen()
lm(scare_score ~ ., data = hm_cln) |>
summary() |>
huxreg(bold_signif = .05,
note = "{stars}",
error_pos = "same",
statistics = c("nobs","r.squared"),
coefs = c("Ranking" = "ranking",
"Avg. Heart Rate (BPM)" = "avg_movie_heart_rate_bpm")) |>
theme_striped() |>
print_screen()
lm(scare_score ~ ., data = hm_cln) |>
?print_screen
lm(Y~X, data = data)
lm(Y~X, data = data) |> summary()
data |>
ggplot(aes(X, Y)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(
title = "Simple Linear Regression",
x = "\nX",
y = "Y\n",
caption = "Y = .72 + 831x"
) +
theme(
panel.grid = element_blank()
)
library(dplyr)
library(ggplot2)
library(MASS)
library(dplyr)
library(ggplot2)
library(MASS)
generate_correlation <- function(n, rho) {
# Define the mean and covariance matrix
mean_vector <- c(0, 0)
covariance_matrix <- matrix(c(1, rho, rho, 1), nrow = 2)
# Generate correlated data using mvrnorm from the MASS package
data <- mvrnorm(n = n, mu = mean_vector, Sigma = covariance_matrix)
# Convert to a data frame
data_frame <- data.frame(X = data[, 1], Y = data[, 2])
return(data_frame)
}
# Example: Generate data with a correlation of 0.7
n <- 100  # Number of data points
rho <- 0.82  # Desired correlation
data <- generate_correlation(n, rho)
data <- data*23
lm(Y~X, data = data) |> summary()
data |>
ggplot(aes(X, Y)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(
title = "Simple Linear Regression",
x = "\nX",
y = "Y\n",
caption = "Y = .72 + 831x"
) +
theme(
panel.grid = element_blank()
)
tab1 |>
set_all_border_colors(row = 5, value = "red") |>
set_all_border_styles(row = 5, value = "solid")
test <-
tibble(
money = rnorm(100,55,5),
x1 = rnorm(100,14,2),
x2 = rnorm(100,30,2)
)
mod1 <- lm(money ~ x1+x2, data = test) |> summary()
tab1 <-
huxreg(
"Money"=mod1,
error_pos = "right",
statistics =
c('# Observations' = 'nobs',
'R squared' = 'r.squared',
'Adjusted R squared' = 'adj.r.squared',
'F statistic' = 'statistic',
'P value' = 'p.value'),
bold_signif = .05,
note = "{stars}"
) |>
theme_striped() |>
set_all_padding(0) |>
set_width(.8)
tab1 |>
set_all_border_colors(row = 2, value = "red") |>
set_all_border_styles(row = 2, value = "solid")
tab1 |>
set_all_border_colors(row = 3, value = "red") |>
set_all_border_styles(row = 3, value = "solid")
tab1 |>
set_all_border_colors(row = 4, value = "red") |>
set_all_border_styles(row = 4, value = "solid")
tab1 |>
set_all_border_colors(row = 5, value = "red") |>
set_all_border_styles(row = 5, value = "solid")
tab1 |>
set_all_border_colors(row = 8, value = "red") |>
set_all_border_styles(row = 8, value = "solid")
